{"ast":null,"code":"var _jsxFileName = \"/Users/kailashanand/StackOverflowClone/client/src/components/user.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React from 'react';\nimport axios from 'axios';\nimport '../stylesheets/user.css';\nimport { Header } from './headerAndSidebar';\nimport { Sidebar } from './headerAndSidebar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet model = null;\nexport const User = props => {\n  _s();\n  const [view, setView] = React.useState('questions');\n  model = JSON.parse(JSON.stringify(props.data));\n  if (props.data.tempUser !== null) {\n    model.currentUser = JSON.parse(JSON.stringify(props.data.tempUser));\n  } else {\n    model.currentUser = JSON.parse(JSON.stringify(props.data.currentUser));\n  }\n  const backToAdmin = () => {\n    props.data.tempUser = null;\n    props.setPage(7);\n  };\n  console.log(model);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      page: props.page,\n      setPage: props.setPage,\n      data: props.data,\n      setData: props.setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      page: props.page,\n      setPage: props.setPage,\n      data: props.data,\n      setData: props.setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" \", model.currentUser.first_name + \" \" + model.currentUser.last_name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", \"Member for \", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", \"Reputation: \" + model.currentUser.reputation, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), props.data.tempUser !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: backToAdmin,\n          children: \" Back \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setView('questions'),\n          children: \"Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setView('tags'),\n          children: \"Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setView('answers'),\n          children: \"Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), model.currentUser.isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setView('users'),\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [view.charAt(0).toUpperCase() + view.slice(1), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), view === 'questions' && displayUserQuestions(props), view === 'tags' && displayTags(props), view === 'answers' && displayUserAnswers(props), view === 'users' && displayAllUsers(props, setView), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(User, \"OwB4oroLDNmN4Fp0+8L3eaHZZZM=\");\n_c = User;\nconst displayUserQuestions = props => {\n  let userQuestions = model.questions.filter(qst => qst.askedBy === model.currentUser._id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: userQuestions.map(question => /*#__PURE__*/_jsxDEV(DisplayQuestionTitle, {\n      question: question,\n      props: props\n    }, question._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\nconst DisplayQuestionTitle = ({\n  question,\n  props\n}) => {\n  _s2();\n  const [showConfirmation, setShowConfirmation] = React.useState(false);\n  const editQuestion = () => {\n    props.data.currentEditQuestion = question;\n    props.setPage(4);\n  };\n  const deleteQuestion = () => {\n    setShowConfirmation(true);\n  };\n  const handleConfirmDelete = async () => {\n    try {\n      for (const commentId of question.comments) {\n        console.log(commentId);\n        await axios.delete(`http://localhost:8000/api/comments/${commentId}`);\n      }\n      for (const answerId of question.answers) {\n        await axios.delete(`http://localhost:8000/api/answers/${answerId}`);\n        const ans = getAnswer(answerId);\n        for (const commentId of ans.comments) {\n          await axios.delete(`http://localhost:8000/api/comments/${commentId}`);\n        }\n      }\n      await axios.delete(`http://localhost:8000/api/questions/${question._id}`);\n      props.setData(null);\n      props.setPage(7);\n    } catch (error) {\n      console.error(\"Error deleting question:\", error);\n    }\n    setShowConfirmation(false);\n  };\n  const handleCancelDelete = () => {\n    setShowConfirmation(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container4\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"middle2\",\n      href: \"#\",\n      onClick: editQuestion,\n      children: question.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete-button\",\n      onClick: deleteQuestion,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure you want to delete?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConfirmDelete,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancelDelete,\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n_s2(DisplayQuestionTitle, \"bS8YmQY/1W3wz3YZXp//0JKv660=\");\n_c2 = DisplayQuestionTitle;\nconst displayUserAnswers = props => {\n  const userAnsweredQuestions = model.questions.filter(question => question.answers.some(answer => {\n    return getAnswer(answer).ans_by === model.currentUser._id;\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: userAnsweredQuestions.map(question => /*#__PURE__*/_jsxDEV(DisplayQuestion, {\n      question: question,\n      model: model,\n      props: props\n    }, question._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\nconst DisplayQuestion = ({\n  question,\n  model,\n  props\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container2\",\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"left\",\n      children: getAnsPerQuestion(question) + \" answers\\n\" + question.views + \" views\\n\" + question.votes + \" votes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"middle\",\n      href: \"#\",\n      onClick: uploadQuestion.bind(null, question, props),\n      children: question.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"askedBy\",\n        children: getUser(question.askedBy).first_name + \" \" + getUser(question.askedBy).last_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"askDate\",\n        children: [\" asked \", findDate(new Date(question.ask_date_time))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"summary\",\n      children: \"Summary: \" + question.summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TagDisplay, {\n      question: question,\n      model: model\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n};\n_c3 = DisplayQuestion;\nconst displayTags = props => {\n  let tags = model.tags.filter(tag => tag.createdBy === model.currentUser._id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tagContainer2\",\n    children: tags.map(tags => /*#__PURE__*/_jsxDEV(DisplayTag, {\n      tags: tags,\n      props: props\n    }, tags._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this);\n};\nconst DisplayTag = ({\n  tags,\n  props\n}) => {\n  _s3();\n  const [showEditModal, setShowEditModal] = React.useState(false);\n  const [editedTagName, setEditedTagName] = React.useState(tags.name);\n  const [showConfirmation, setShowConfirmation] = React.useState(false);\n  const [error, setError] = React.useState('');\n  const deleteTag = async () => {\n    let count = getCountPerTag(tags._id);\n    if (count > 0) {\n      model.questions.forEach(async question => {\n        const tagIndex = question.tags.indexOf(tags._id);\n        if (tagIndex !== -1) {\n          question.tags.splice(tagIndex, 1);\n          await axios.put(`http://localhost:8000/api/questions/${question._id}`, {\n            ...question,\n            tags: question.tags\n          });\n        }\n      });\n    }\n    await axios.delete(`http://localhost:8000/api/tags/${tags._id}`);\n    props.setData(null);\n    props.setPage(7);\n  };\n  const handleEditTag = () => {\n    setShowEditModal(true);\n  };\n  const handleDeleteTag = () => {\n    setShowConfirmation(true);\n  };\n  const handleConfirmDelete = async () => {\n    await deleteTag();\n    setShowConfirmation(false);\n  };\n  const handleConfirmEdit = async () => {\n    if (!editedTagName.trim() || editedTagName.includes(' ')) {\n      setError('Tag name cannot be empty or contain spaces.');\n    } else {\n      try {\n        await axios.put(`http://localhost:8000/api/tags/${tags._id}`, {\n          name: editedTagName,\n          createdBy: model.currentUser._id\n        });\n        setShowEditModal(false);\n        props.setData(null);\n        props.setPage(7);\n      } catch (error) {\n        console.error(\"Error updating tag:\", error);\n      }\n    }\n  };\n  const handleCancelDelete = () => {\n    setShowConfirmation(false);\n  };\n  const handleCancelEdit = () => {\n    setShowEditModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tagBox2\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"taglink\",\n      children: tags.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"tagcount\",\n      children: [getCountPerTag(tags._id), \" questions\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"edit-button\",\n      onClick: handleEditTag,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete-button\",\n      onClick: handleDeleteTag,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), showEditModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Edit Tag Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedTagName,\n        onChange: e => setEditedTagName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConfirmEdit,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancelEdit,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure you want to delete?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConfirmDelete,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancelDelete,\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 9\n  }, this);\n};\n_s3(DisplayTag, \"fj9HFKrRGGz64+UVGANK8gkoZg8=\");\n_c4 = DisplayTag;\nconst TagDisplay = ({\n  question,\n  model\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tagContainer\",\n    children: question.tags.map(tagId => {\n      const tag = getTag(tagId);\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bottom\",\n        children: tag\n      }, tagId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 9\n  }, this);\n};\n_c5 = TagDisplay;\nconst displayAllUsers = (props, setView) => {\n  let users = props.data.users.filter(user => !user.isAdmin);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: users.map(user => /*#__PURE__*/_jsxDEV(DisplayUser, {\n      user: user,\n      props: props,\n      setView: setView\n    }, user._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\nconst DisplayUser = ({\n  user,\n  props,\n  setView\n}) => {\n  _s4();\n  const [showConfirmation, setShowConfirmation] = React.useState(false);\n  const directToUserPage = () => {\n    props.data.tempUser = user;\n    setView('questions');\n  };\n  const handleConfirmDelete = async () => {\n    await deleteUser();\n    setShowConfirmation(false);\n  };\n  const handleCancelDelete = () => {\n    setShowConfirmation(false);\n  };\n  const handleDeleteUser = () => {\n    setShowConfirmation(true);\n  };\n  const deleteUser = async () => {\n    console.log(`Starting deletion for user ${user._id}`);\n\n    // Deleting questions and their associated answers and comments\n    const userQuestions = model.questions.filter(question => question.askedBy === user._id);\n    console.log(`Found ${userQuestions.length} questions to delete`);\n    for (const question of userQuestions) {\n      console.log(`Deleting comments for question ${question._id}`);\n      for (const commentId of question.comments) {\n        await axios.delete(`http://localhost:8000/api/comments/${commentId}`);\n        console.log(`Deleted comment ${commentId}`);\n      }\n      console.log(`Deleting answers for question ${question._id}`);\n      for (const answerId of question.answers) {\n        const answer = getAnswer(answerId);\n        console.log(`Deleting comments for answer ${answerId}`);\n        for (const commentId of answer.comments) {\n          await axios.delete(`http://localhost:8000/api/comments/${commentId}`);\n          console.log(`Deleted comment ${commentId} from answer ${answerId}`);\n        }\n        await axios.delete(`http://localhost:8000/api/answers/${answerId}`);\n        console.log(`Deleted answer ${answerId}`);\n      }\n      await axios.delete(`http://localhost:8000/api/questions/${question._id}`);\n      console.log(`Deleted question ${question._id}`);\n    }\n\n    // Deleting answers by the user on other questions and removing references\n    const userAnswers = model.answers.filter(answer => answer.ans_by === user._id);\n    console.log(`Found ${userAnswers.length} answers to delete`);\n    for (const answer of userAnswers) {\n      console.log(`Deleting comments for answer ${answer._id}`);\n      for (const commentId of answer.comments) {\n        await axios.delete(`http://localhost:8000/api/comments/${commentId}`);\n        console.log(`Deleted comment ${commentId} from answer ${answer._id}`);\n      }\n      const parentQuestion = model.questions.find(question => question.answers.includes(answer._id));\n      if (parentQuestion) {\n        console.log(`Removing answer ${answer._id} from question ${parentQuestion._id}`);\n        const updatedAnswers = parentQuestion.answers.filter(id => id !== answer._id);\n        await axios.put(`http://localhost:8000/api/questions/${parentQuestion._id}`, {\n          ...parentQuestion,\n          answers: updatedAnswers\n        });\n        console.log(`Updated question ${parentQuestion._id} after removing answer ${answer._id}`);\n      }\n      await axios.delete(`http://localhost:8000/api/answers/${answer._id}`);\n      console.log(`Deleted answer ${answer._id}`);\n    }\n\n    // Deleting all comments made by the user and removing references\n    const userComments = model.comments.filter(comment => comment.authorId === user._id);\n    console.log(`Found ${userComments.length} comments to delete`);\n    for (const comment of userComments) {\n      const parentQuestion = model.questions.find(question => question.comments.includes(comment._id));\n      const parentAnswer = model.answers.find(answer => answer.comments.includes(comment._id));\n      if (parentQuestion) {\n        console.log(`Removing comment ${comment._id} from question ${parentQuestion._id}`);\n        const updatedComments = parentQuestion.comments.filter(id => id !== comment._id);\n        await axios.put(`http://localhost:8000/api/questions/${parentQuestion._id}`, {\n          ...parentQuestion,\n          comments: updatedComments\n        });\n        console.log(`Updated question ${parentQuestion._id} after removing comment ${comment._id}`);\n      } else if (parentAnswer) {\n        console.log(`Removing comment ${comment._id} from answer ${parentAnswer._id}`);\n        const updatedComments = parentAnswer.comments.filter(id => id !== comment._id);\n        await axios.put(`http://localhost:8000/api/answers/${parentAnswer._id}`, {\n          ...parentAnswer,\n          comments: updatedComments\n        });\n        console.log(`Updated answer ${parentAnswer._id} after removing comment ${comment._id}`);\n      }\n      await axios.delete(`http://localhost:8000/api/comments/${comment._id}`);\n      console.log(`Deleted comment ${comment._id}`);\n    }\n\n    // Deleting all tags created by the user\n    const userTags = model.tags.filter(tag => tag.createdBy === user._id);\n    console.log(`Found ${userTags.length} tags to delete`);\n    for (const tag of userTags) {\n      await axios.delete(`http://localhost:8000/api/tags/${tag._id}`);\n      console.log(`Deleted tag ${tag._id} created by user`);\n    }\n\n    // Deleting the user\n    await axios.delete(`http://localhost:8000/api/users/${user._id}`);\n    console.log(`Deleted user ${user._id}`);\n    props.setData(null);\n    props.setPage(7);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container4\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"middle2\",\n      href: \"#\",\n      onClick: directToUserPage,\n      children: user.first_name + \" \" + user.last_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delete-button\",\n      onClick: handleDeleteUser,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 13\n    }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure you want to delete?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConfirmDelete,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancelDelete,\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 425,\n    columnNumber: 9\n  }, this);\n};\n_s4(DisplayUser, \"bS8YmQY/1W3wz3YZXp//0JKv660=\");\n_c6 = DisplayUser;\nfunction findDate(date) {\n  const now = new Date();\n  const diff = now - date;\n  const seconds = Math.floor(diff / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n  const dayOfMonth = date.getDate();\n  const month = date.toLocaleString('en-us', {\n    month: 'short'\n  });\n  const year = date.getFullYear();\n  const hour = date.getHours();\n  const minute = date.getMinutes().toString().padStart(2, '0');\n  if (days < 1) {\n    if (hours < 1) {\n      if (minutes < 1) {\n        return seconds + \" seconds ago\";\n      } else {\n        return minutes + \" minutes ago\";\n      }\n    } else {\n      return hours + \" hours ago\";\n    }\n  } else if (days < 2) {\n    return `${month} ${dayOfMonth} at ${hour}:${minute}`;\n  } else {\n    return `${month} ${dayOfMonth}, ${year} at ${hour}:${minute}`;\n  }\n}\nfunction sortByDate(list) {\n  list.sort((a, b) => new Date(b.ask_date_time) - new Date(a.ask_date_time));\n}\nfunction uploadQuestion(question, props) {\n  question.views++;\n  model.questions.find(qtn => qtn._id === question._id).views = question.views;\n  localStorage.setItem(\"currentQuestion\", JSON.stringify(question));\n  props.setPage(5);\n}\nfunction getAnsPerQuestion(q) {\n  return q.answers.length;\n}\nfunction getTag(tagId) {\n  if (model.tags.find(tag => tag._id === tagId) === undefined) {\n    return;\n  }\n  return model.tags.find(tag => tag._id === tagId).name;\n}\nfunction getAnswer(aid) {\n  return model.answers.find(ans => aid === ans._id);\n}\nfunction getUser(uid) {\n  return model.users.find(user => user._id === uid);\n}\nfunction getCountPerTag(_id) {\n  let count = 0;\n  model.questions.forEach(question => {\n    // if(question.tags.find(tag => tag._id === _id))\n    // {\n    //   count++;\n    // }\n    if (question.tags.includes(_id)) {\n      count++;\n    }\n  });\n  return count;\n}\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"User\");\n$RefreshReg$(_c2, \"DisplayQuestionTitle\");\n$RefreshReg$(_c3, \"DisplayQuestion\");\n$RefreshReg$(_c4, \"DisplayTag\");\n$RefreshReg$(_c5, \"TagDisplay\");\n$RefreshReg$(_c6, \"DisplayUser\");","map":{"version":3,"names":["React","axios","Header","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","model","User","props","_s","view","setView","useState","JSON","parse","stringify","data","tempUser","currentUser","backToAdmin","setPage","console","log","children","page","setData","fileName","_jsxFileName","lineNumber","columnNumber","className","first_name","last_name","reputation","onClick","isAdmin","charAt","toUpperCase","slice","displayUserQuestions","displayTags","displayUserAnswers","displayAllUsers","_c","userQuestions","questions","filter","qst","askedBy","_id","map","question","DisplayQuestionTitle","_s2","showConfirmation","setShowConfirmation","editQuestion","currentEditQuestion","deleteQuestion","handleConfirmDelete","commentId","comments","delete","answerId","answers","ans","getAnswer","error","handleCancelDelete","href","title","_c2","userAnsweredQuestions","some","answer","ans_by","DisplayQuestion","getAnsPerQuestion","views","votes","uploadQuestion","bind","getUser","findDate","Date","ask_date_time","summary","TagDisplay","_c3","tags","tag","createdBy","DisplayTag","_s3","showEditModal","setShowEditModal","editedTagName","setEditedTagName","name","setError","deleteTag","count","getCountPerTag","forEach","tagIndex","indexOf","splice","put","handleEditTag","handleDeleteTag","handleConfirmEdit","trim","includes","handleCancelEdit","type","value","onChange","e","target","_c4","tagId","getTag","_c5","users","user","DisplayUser","_s4","directToUserPage","deleteUser","handleDeleteUser","length","userAnswers","parentQuestion","find","updatedAnswers","id","userComments","comment","authorId","parentAnswer","updatedComments","userTags","_c6","date","now","diff","seconds","Math","floor","minutes","hours","days","dayOfMonth","getDate","month","toLocaleString","year","getFullYear","hour","getHours","minute","getMinutes","toString","padStart","sortByDate","list","sort","a","b","qtn","localStorage","setItem","q","undefined","aid","uid","$RefreshReg$"],"sources":["/Users/kailashanand/StackOverflowClone/client/src/components/user.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport '../stylesheets/user.css';\nimport { Header } from './headerAndSidebar';\nimport { Sidebar } from './headerAndSidebar';\n\nlet model = null;\n\nexport const User = (props) => {\n\n    const [view, setView] = React.useState('questions');\n\n    model = JSON.parse(JSON.stringify(props.data));\n\n    if (props.data.tempUser !== null) {\n        model.currentUser = JSON.parse(JSON.stringify(props.data.tempUser));\n    }\n    else {\n        model.currentUser = JSON.parse(JSON.stringify(props.data.currentUser));\n    }\n\n    const backToAdmin = () => {\n        props.data.tempUser = null;\n        props.setPage(7);\n    }\n\n    console.log(model);\n\n    return (\n        <>\n            <Header page={props.page} setPage={props.setPage} data={props.data} setData={props.setData} />\n            <Sidebar page={props.page} setPage={props.setPage} data={props.data} setData={props.setData} />\n            <div className='main-content3'>\n                <div className='user-info'>\n                    <h2> {model.currentUser.first_name + \" \" + model.currentUser.last_name} </h2>\n                    <p> {\"Member for \"} </p>\n                    <p> {\"Reputation: \" + model.currentUser.reputation} </p>\n                    {props.data.tempUser !== null && <button onClick={backToAdmin}> Back </button>}\n                </div>\n                <div className='view-selection'>\n                    <button onClick={() => setView('questions')}>Questions</button>\n                    <button onClick={() => setView('tags')}>Tags</button>\n                    <button onClick={() => setView('answers')}>Answers</button>\n                    {model.currentUser.isAdmin && <button onClick={() => setView('users')}>Users</button>}\n                </div>\n                <h2>{view.charAt(0).toUpperCase() + view.slice(1)}:</h2>\n                {view === 'questions' && displayUserQuestions(props)}\n                {view === 'tags' && displayTags(props)}\n                {view === 'answers' && displayUserAnswers(props)}\n                {view === 'users' && displayAllUsers(props, setView)};\n            </div>\n        </>\n    );\n}\n\nconst displayUserQuestions = (props) => {\n    let userQuestions = model.questions.filter(qst => qst.askedBy === model.currentUser._id);\n\n    return (\n        <>\n            {userQuestions.map(question =>\n                <DisplayQuestionTitle question={question} props={props} key={question._id} />\n            )}\n        </>\n    );\n}\n\nconst DisplayQuestionTitle = ({ question, props }) => {\n    const [showConfirmation, setShowConfirmation] = React.useState(false);\n\n\n    const editQuestion = () => {\n        props.data.currentEditQuestion = question;\n        props.setPage(4);\n    }\n\n    const deleteQuestion = () => {\n        setShowConfirmation(true);\n    }\n\n    const handleConfirmDelete = async () => {\n        try {\n\n            for (const commentId of question.comments) {\n                console.log(commentId);\n                await axios.delete(`http://localhost:8000/api/comments/${commentId}`);\n            }\n\n\n            for (const answerId of question.answers) {\n                await axios.delete(`http://localhost:8000/api/answers/${answerId}`);\n\n                const ans = getAnswer(answerId);\n\n                for (const commentId of ans.comments) {\n                    await axios.delete(`http://localhost:8000/api/comments/${commentId}`);\n                }\n            }\n\n\n            await axios.delete(`http://localhost:8000/api/questions/${question._id}`);\n\n            props.setData(null);\n            props.setPage(7);\n        } catch (error) {\n            console.error(\"Error deleting question:\", error);\n        }\n        setShowConfirmation(false);\n    }\n\n    const handleCancelDelete = () => {\n        setShowConfirmation(false);\n    }\n\n    return (\n        <div className=\"container4\">\n            <a className=\"middle2\" href='#' onClick={editQuestion} >\n                {question.title}\n            </a>\n            <button className=\"delete-button\" onClick={deleteQuestion}>Delete</button>\n            {showConfirmation && (\n                <div className=\"confirmation-modal\">\n                    <p>Are you sure you want to delete?</p>\n                    <button onClick={handleConfirmDelete}>Yes</button>\n                    <button onClick={handleCancelDelete}>No</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nconst displayUserAnswers = (props) => {\n\n    const userAnsweredQuestions = model.questions.filter(question =>\n        question.answers.some(answer => {\n            return getAnswer(answer).ans_by === model.currentUser._id;\n        })\n    );\n\n    return (\n        <>\n            {userAnsweredQuestions.map(question => (\n                <DisplayQuestion question={question} model={model} props={props} key={question._id} />\n            ))}\n        </>\n    );\n};\n\nconst DisplayQuestion = ({ question, model, props }) => {\n    return (\n        <div className=\"container2\">\n            <pre className=\"left\">\n                {getAnsPerQuestion(question) + \" answers\\n\" + question.views + \" views\\n\" + question.votes + \" votes\"}\n            </pre>\n            <a className=\"middle\" href=\"#\" onClick={uploadQuestion.bind(null, question, props)}>\n                {question.title}\n            </a>\n            <p className=\"right\">\n                <span className=\"askedBy\">{getUser(question.askedBy).first_name + \" \" + getUser(question.askedBy).last_name}</span>\n                <span className=\"askDate\"> asked {findDate(new Date(question.ask_date_time))}</span>\n            </p>\n            <p className='summary'>\n                {\"Summary: \" + question.summary}\n            </p>\n            <TagDisplay question={question} model={model} />\n        </div>\n    );\n};\n\nconst displayTags = (props) => {\n    let tags = model.tags.filter(tag => tag.createdBy === model.currentUser._id);\n    return (\n        <div className=\"tagContainer2\">\n            {tags.map((tags) => (\n                <DisplayTag key={tags._id} tags={tags} props={props} />\n            ))}\n        </div>\n    );\n}\n\nconst DisplayTag = ({ tags, props }) => {\n    const [showEditModal, setShowEditModal] = React.useState(false);\n    const [editedTagName, setEditedTagName] = React.useState(tags.name);\n    const [showConfirmation, setShowConfirmation] = React.useState(false);\n    const [error, setError] = React.useState('');\n\n    const deleteTag = async () => {\n        let count = getCountPerTag(tags._id);\n\n        if (count > 0) {\n\n            model.questions.forEach(async (question) => {\n                const tagIndex = question.tags.indexOf(tags._id);\n                if (tagIndex !== -1) {\n                    question.tags.splice(tagIndex, 1);\n\n                    await axios.put(`http://localhost:8000/api/questions/${question._id}`, {\n                        ...question,\n                        tags: question.tags\n                    });\n                }\n            });\n        }\n\n        await axios.delete(`http://localhost:8000/api/tags/${tags._id}`);\n\n        props.setData(null);\n        props.setPage(7);\n    }\n\n    const handleEditTag = () => {\n        setShowEditModal(true);\n    };\n\n    const handleDeleteTag = () => {\n        setShowConfirmation(true);\n    }\n\n    const handleConfirmDelete = async () => {\n        await deleteTag();\n        setShowConfirmation(false);\n    }\n\n    const handleConfirmEdit = async () => {\n        if (!editedTagName.trim() || editedTagName.includes(' ')) {\n            setError('Tag name cannot be empty or contain spaces.');\n        } else {\n        try {\n            await axios.put(`http://localhost:8000/api/tags/${tags._id}`, { name: editedTagName, createdBy: model.currentUser._id });\n\n            setShowEditModal(false);\n            props.setData(null);\n            props.setPage(7);\n\n        } catch (error) {\n            console.error(\"Error updating tag:\", error);\n        }\n    }\n    };\n\n    const handleCancelDelete = () => {\n        setShowConfirmation(false);\n    }\n\n    const handleCancelEdit = () => {\n        setShowEditModal(false);\n    };\n\n    return (\n        <div className=\"tagBox2\">\n            <p className=\"taglink\" >\n                {tags.name}\n            </p>\n            <p className=\"tagcount\">\n                {getCountPerTag(tags._id)} questions\n            </p>\n            <button className=\"edit-button\" onClick={handleEditTag}>Edit</button>\n            <button className=\"delete-button\" onClick={handleDeleteTag}>Delete</button>\n            {showEditModal && (\n                <div className=\"edit-modal\">\n                    <p>Edit Tag Name:</p>\n                    <input\n                        type=\"text\"\n                        value={editedTagName}\n                        onChange={e => setEditedTagName(e.target.value)}\n                    />\n                    <button onClick={handleConfirmEdit}>Save Changes</button>\n                    <button onClick={handleCancelEdit}>Cancel</button>\n                    {error && <div className=\"error-message\">{error}</div>}\n                </div>\n            )}\n            {showConfirmation && (\n                <div className=\"confirmation-modal\">\n                    <p>Are you sure you want to delete?</p>\n                    <button onClick={handleConfirmDelete}>Yes</button>\n                    <button onClick={handleCancelDelete}>No</button>\n                </div>\n            )}\n\n        </div>\n    );\n};\n\nconst TagDisplay = ({ question, model }) => {\n    return (\n        <div className=\"tagContainer\">\n            {question.tags.map((tagId) => {\n                const tag = getTag(tagId);\n                return (\n                    <p className=\"bottom\" key={tagId}>\n                        {tag}\n                    </p>\n                );\n            })}\n        </div>\n    );\n};\n\nconst displayAllUsers = (props, setView) => {\n    let users = props.data.users.filter(user => !user.isAdmin);\n\n    return (\n        <>\n            {users.map(user => (\n                <DisplayUser user={user} props={props} key={user._id} setView={setView} />\n            ))}\n        </>\n    );\n}\n\nconst DisplayUser = ({ user, props, setView }) => {\n    const [showConfirmation, setShowConfirmation] = React.useState(false);\n\n    const directToUserPage = () => {\n        props.data.tempUser = user;\n        setView('questions');\n    }\n\n    const handleConfirmDelete = async () => {\n        await deleteUser();\n        setShowConfirmation(false);\n    }\n\n    const handleCancelDelete = () => {\n        setShowConfirmation(false);\n    }\n\n    const handleDeleteUser = () => {\n        setShowConfirmation(true);\n    }\n\n    const deleteUser = async () => {\n        console.log(`Starting deletion for user ${user._id}`);\n\n        // Deleting questions and their associated answers and comments\n        const userQuestions = model.questions.filter(question => question.askedBy === user._id);\n        console.log(`Found ${userQuestions.length} questions to delete`);\n        for (const question of userQuestions) {\n            console.log(`Deleting comments for question ${question._id}`);\n            for (const commentId of question.comments) {\n                await axios.delete(`http://localhost:8000/api/comments/${commentId}`);\n                console.log(`Deleted comment ${commentId}`);\n            }\n            console.log(`Deleting answers for question ${question._id}`);\n            for (const answerId of question.answers) {\n                const answer = getAnswer(answerId);\n                console.log(`Deleting comments for answer ${answerId}`);\n                for (const commentId of answer.comments) {\n                    await axios.delete(`http://localhost:8000/api/comments/${commentId}`);\n                    console.log(`Deleted comment ${commentId} from answer ${answerId}`);\n                }\n                await axios.delete(`http://localhost:8000/api/answers/${answerId}`);\n                console.log(`Deleted answer ${answerId}`);\n            }\n            await axios.delete(`http://localhost:8000/api/questions/${question._id}`);\n            console.log(`Deleted question ${question._id}`);\n        }\n\n        // Deleting answers by the user on other questions and removing references\n        const userAnswers = model.answers.filter(answer => answer.ans_by === user._id);\n        console.log(`Found ${userAnswers.length} answers to delete`);\n        for (const answer of userAnswers) {\n            console.log(`Deleting comments for answer ${answer._id}`);\n            for (const commentId of answer.comments) {\n                await axios.delete(`http://localhost:8000/api/comments/${commentId}`);\n                console.log(`Deleted comment ${commentId} from answer ${answer._id}`);\n            }\n            const parentQuestion = model.questions.find(question => question.answers.includes(answer._id));\n            if (parentQuestion) {\n                console.log(`Removing answer ${answer._id} from question ${parentQuestion._id}`);\n                const updatedAnswers = parentQuestion.answers.filter(id => id !== answer._id);\n                await axios.put(`http://localhost:8000/api/questions/${parentQuestion._id}`, {\n                    ...parentQuestion,\n                    answers: updatedAnswers\n                });\n                console.log(`Updated question ${parentQuestion._id} after removing answer ${answer._id}`);\n            }\n            await axios.delete(`http://localhost:8000/api/answers/${answer._id}`);\n            console.log(`Deleted answer ${answer._id}`);\n        }\n\n        // Deleting all comments made by the user and removing references\n        const userComments = model.comments.filter(comment => comment.authorId === user._id);\n        console.log(`Found ${userComments.length} comments to delete`);\n        for (const comment of userComments) {\n            const parentQuestion = model.questions.find(question => question.comments.includes(comment._id));\n            const parentAnswer = model.answers.find(answer => answer.comments.includes(comment._id));\n            if (parentQuestion) {\n                console.log(`Removing comment ${comment._id} from question ${parentQuestion._id}`);\n                const updatedComments = parentQuestion.comments.filter(id => id !== comment._id);\n                await axios.put(`http://localhost:8000/api/questions/${parentQuestion._id}`, {\n                    ...parentQuestion,\n                    comments: updatedComments\n                });\n                console.log(`Updated question ${parentQuestion._id} after removing comment ${comment._id}`);\n            } else if (parentAnswer) {\n                console.log(`Removing comment ${comment._id} from answer ${parentAnswer._id}`);\n                const updatedComments = parentAnswer.comments.filter(id => id !== comment._id);\n                await axios.put(`http://localhost:8000/api/answers/${parentAnswer._id}`, {\n                    ...parentAnswer,\n                    comments: updatedComments\n                });\n                console.log(`Updated answer ${parentAnswer._id} after removing comment ${comment._id}`);\n            }\n            await axios.delete(`http://localhost:8000/api/comments/${comment._id}`);\n            console.log(`Deleted comment ${comment._id}`);\n        }\n\n        // Deleting all tags created by the user\n        const userTags = model.tags.filter(tag => tag.createdBy === user._id);\n        console.log(`Found ${userTags.length} tags to delete`);\n        for (const tag of userTags) {\n            await axios.delete(`http://localhost:8000/api/tags/${tag._id}`);\n            console.log(`Deleted tag ${tag._id} created by user`);\n        }\n\n        // Deleting the user\n        await axios.delete(`http://localhost:8000/api/users/${user._id}`);\n        console.log(`Deleted user ${user._id}`);\n        props.setData(null);\n        props.setPage(7);\n    }\n\n    return (\n        <div className=\"container4\">\n            <a className=\"middle2\" href='#' onClick={directToUserPage}>\n                {user.first_name + \" \" + user.last_name}\n            </a>\n            <button className=\"delete-button\" onClick={handleDeleteUser}>Delete</button>\n            {showConfirmation && (\n                <div className=\"confirmation-modal\">\n                    <p>Are you sure you want to delete?</p>\n                    <button onClick={handleConfirmDelete}>Yes</button>\n                    <button onClick={handleCancelDelete}>No</button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nfunction findDate(date) {\n    const now = new Date();\n    const diff = now - date;\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n\n    const dayOfMonth = date.getDate();\n    const month = date.toLocaleString('en-us', { month: 'short' });\n    const year = date.getFullYear();\n    const hour = date.getHours();\n    const minute = date.getMinutes().toString().padStart(2, '0');\n\n    if (days < 1) {\n        if (hours < 1) {\n            if (minutes < 1) {\n                return seconds + \" seconds ago\";\n            } else {\n                return minutes + \" minutes ago\";\n            }\n        } else {\n            return hours + \" hours ago\";\n        }\n    } else if (days < 2) {\n        return `${month} ${dayOfMonth} at ${hour}:${minute}`;\n    } else {\n        return `${month} ${dayOfMonth}, ${year} at ${hour}:${minute}`;\n    }\n}\n\nfunction sortByDate(list) {\n    list.sort((a, b) => new Date(b.ask_date_time) - new Date(a.ask_date_time));\n}\n\n\nfunction uploadQuestion(question, props) {\n    question.views++;\n    model.questions.find(qtn => qtn._id === question._id).views = question.views;\n    localStorage.setItem(\"currentQuestion\", JSON.stringify(question));\n    props.setPage(5);\n}\n\nfunction getAnsPerQuestion(q) {\n    return q.answers.length;\n}\n\nfunction getTag(tagId) {\n    if (model.tags.find(tag => tag._id === tagId) === undefined) {\n        return;\n    }\n\n    return model.tags.find(tag => tag._id === tagId).name;\n}\n\nfunction getAnswer(aid) {\n    return model.answers.find(ans => aid === ans._id);\n}\n\nfunction getUser(uid) {\n    return model.users.find(user => user._id === uid);\n}\n\nfunction getCountPerTag(_id) {\n    let count = 0;\n    model.questions.forEach(question => {\n        // if(question.tags.find(tag => tag._id === _id))\n        // {\n        //   count++;\n        // }\n        if (question.tags.includes(_id)) {\n            count++;\n        }\n    })\n\n    return count;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}