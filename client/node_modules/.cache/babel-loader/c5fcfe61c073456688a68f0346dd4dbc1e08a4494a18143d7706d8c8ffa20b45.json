{"ast":null,"code":"var _jsxFileName = \"/Users/kailashanand/StackOverflowClone/client/src/components/homePage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from 'axios';\nimport '../stylesheets/homePage.css';\nimport { Header, Sidebar } from './headerAndSidebar';\nimport { Head } from './bodyHeader';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet model = null;\nexport const HomePage = props => {\n  _s();\n  model = props.data;\n  const [state, selectState] = React.useState(0);\n  const [pageIndex, setPageIndex] = React.useState(0);\n  const questionsPerPage = 5;\n  const numPages = Math.ceil(model.questions.length / questionsPerPage);\n  const handleNext = () => {\n    if (pageIndex < numPages - 1) setPageIndex(pageIndex + 1);\n  };\n  const handlePrev = () => {\n    if (pageIndex > 0) setPageIndex(pageIndex - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      page: props.page,\n      setPage: props.setPage,\n      data: props.data,\n      setData: props.setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      page: props.page,\n      setPage: props.setPage,\n      data: props.data,\n      setData: props.setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Head, {\n      page: props.page,\n      setPage: props.setPage,\n      data: props.data,\n      setData: props.setData,\n      state: state,\n      selectState: selectState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), displayAllQuestions(state, props, pageIndex, questionsPerPage), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrev,\n        disabled: pageIndex === 0,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: pageIndex === numPages - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HomePage, \"4VtGmCg2WcuNe+BIA6XuycX0ulk=\");\n_c = HomePage;\nconst displayAllQuestions = (state, props, pageIndex, questionsPerPage) => {\n  let questions = model.questions;\n  if (state === 0) {\n    sortByDate(questions);\n  }\n  if (state === 1) {\n    questions.sort((a, b) => {\n      const latestAnswerA = findlatestAnswer(a, model);\n      const latestAnswerB = findlatestAnswer(b, model);\n      if (latestAnswerA && latestAnswerB) {\n        return new Date(latestAnswerB.ans_date_time) - new Date(latestAnswerA.ans_date_time);\n      } else if (latestAnswerA) {\n        return -1;\n      } else if (latestAnswerB) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  }\n  if (state === 2) {\n    questions = questions.filter(question => question.answers.length === 0);\n  }\n  const start = pageIndex * questionsPerPage;\n  const end = start + questionsPerPage;\n  const questionsToShow = questions.slice(start, end);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: questionsToShow.map(question => /*#__PURE__*/_jsxDEV(DisplayQuestion, {\n      question: question,\n      model: model,\n      props: props\n    }, question._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\nconst DisplayQuestion = ({\n  question,\n  model,\n  props\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container2\",\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"left\",\n      children: getAnsPerQuestion(question) + \" answers\\n\" + question.views + \" views\\n\" + question.votes + \" votes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"middle\",\n      href: \"#\",\n      onClick: uploadQuestion.bind(null, question, props),\n      children: question.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"askedBy\",\n        children: getUser(question.askedBy).first_name + \" \" + getUser(question.askedBy).last_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"askDate\",\n        children: [\" asked \", findDate(new Date(question.ask_date_time))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"summary\",\n      children: \"Summary: \" + question.summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TagDisplay, {\n      question: question,\n      model: model\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_c2 = DisplayQuestion;\nconst TagDisplay = ({\n  question,\n  model\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tagContainer\",\n    children: question.tags.map(tagId => {\n      const tag = getTag(tagId);\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bottom\",\n        children: tag\n      }, tagId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_c3 = TagDisplay;\nfunction findDate(date) {\n  const now = new Date();\n  const diff = now - date;\n  const seconds = Math.floor(diff / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n  const dayOfMonth = date.getDate();\n  const month = date.toLocaleString('en-us', {\n    month: 'short'\n  });\n  const year = date.getFullYear();\n  const hour = date.getHours();\n  const minute = date.getMinutes().toString().padStart(2, '0');\n  if (days < 1) {\n    if (hours < 1) {\n      if (minutes < 1) {\n        return seconds + \" seconds ago\";\n      } else {\n        return minutes + \" minutes ago\";\n      }\n    } else {\n      return hours + \" hours ago\";\n    }\n  } else if (days < 2) {\n    return `${month} ${dayOfMonth} at ${hour}:${minute}`;\n  } else {\n    return `${month} ${dayOfMonth}, ${year} at ${hour}:${minute}`;\n  }\n}\nfunction sortByDate(list) {\n  list.sort((a, b) => new Date(b.ask_date_time) - new Date(a.ask_date_time));\n}\nfunction findlatestAnswer(question, model) {\n  let latestAnswer = null;\n  question.answers.forEach(ans => {\n    const ans2 = getAnswer(ans._id);\n    if (!latestAnswer || new Date(ans2.ans_date_time) > new Date(latestAnswer.ans_date_time)) {\n      latestAnswer = ans2;\n    }\n  });\n  return latestAnswer;\n}\n\n// function uploadQuestion(question, props) {\n//   question.views++;\n//   model.questions.find(qtn => qtn._id === question._id).views = question.views;\n//   localStorage.setItem(\"currentQuestion\", JSON.stringify(question));\n//   props.setPage(5);\n// }\n\nasync function uploadQuestion(question, props) {\n  try {\n    // Increment views count in the database\n    const updatedQuestion = await axios.put(`http://localhost:8000/api/questions/${question._id}`, {\n      ...question,\n      views: question.views + 1 // Increment views count by 1\n    });\n\n    // Update the currentQuestion in localStorage\n    localStorage.setItem(\"currentQuestion\", JSON.stringify(updatedQuestion.data));\n\n    // Update the question views in the model\n    const index = model.questions.findIndex(qtn => qtn._id === question._id);\n    if (index !== -1) {\n      model.questions[index].views = updatedQuestion.data.views;\n    }\n\n    // Navigate to page 5\n    props.setPage(5);\n  } catch (error) {\n    console.error(\"Error uploading question:\", error);\n  }\n}\nfunction getAnsPerQuestion(q) {\n  return q.answers.length;\n}\nfunction getTag(tagId) {\n  if (model.tags.find(tag => tag._id === tagId) === undefined) {\n    return;\n  }\n  return model.tags.find(tag => tag._id === tagId).name;\n}\nfunction getAnswer(aid) {\n  return model.answers.find(ans => aid === ans._id);\n}\nfunction getUser(uid) {\n  return model.users.find(user => user._id === uid);\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"HomePage\");\n$RefreshReg$(_c2, \"DisplayQuestion\");\n$RefreshReg$(_c3, \"TagDisplay\");","map":{"version":3,"names":["React","axios","Header","Sidebar","Head","jsxDEV","_jsxDEV","Fragment","_Fragment","model","HomePage","props","_s","data","state","selectState","useState","pageIndex","setPageIndex","questionsPerPage","numPages","Math","ceil","questions","length","handleNext","handlePrev","children","page","setPage","setData","fileName","_jsxFileName","lineNumber","columnNumber","displayAllQuestions","className","onClick","disabled","_c","sortByDate","sort","a","b","latestAnswerA","findlatestAnswer","latestAnswerB","Date","ans_date_time","filter","question","answers","start","end","questionsToShow","slice","map","DisplayQuestion","_id","getAnsPerQuestion","views","votes","href","uploadQuestion","bind","title","getUser","askedBy","first_name","last_name","findDate","ask_date_time","summary","TagDisplay","_c2","tags","tagId","tag","getTag","_c3","date","now","diff","seconds","floor","minutes","hours","days","dayOfMonth","getDate","month","toLocaleString","year","getFullYear","hour","getHours","minute","getMinutes","toString","padStart","list","latestAnswer","forEach","ans","ans2","getAnswer","updatedQuestion","put","localStorage","setItem","JSON","stringify","index","findIndex","qtn","error","console","q","find","undefined","name","aid","uid","users","user","$RefreshReg$"],"sources":["/Users/kailashanand/StackOverflowClone/client/src/components/homePage.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport '../stylesheets/homePage.css';\nimport { Header, Sidebar } from './headerAndSidebar';\nimport { Head } from './bodyHeader';\n\nlet model = null;\n\nexport const HomePage = (props) => {\n\n  model = props.data;\n  const [state, selectState] = React.useState(0);\n  const [pageIndex, setPageIndex] = React.useState(0);  \n\n  const questionsPerPage = 5;\n  const numPages = Math.ceil(model.questions.length / questionsPerPage);\n\n  const handleNext = () => {\n    if (pageIndex < numPages - 1) setPageIndex(pageIndex + 1);\n  };\n\n  const handlePrev = () => {\n    if (pageIndex > 0) setPageIndex(pageIndex - 1);\n  };\n\n  return (\n    <>\n      <Header page={props.page} setPage={props.setPage} data={props.data} setData={props.setData} />\n      <Sidebar page={props.page} setPage={props.setPage} data={props.data} setData={props.setData} />\n      <Head page={props.page} setPage={props.setPage} data={props.data} setData={props.setData} state={state} selectState={selectState}/>\n      {displayAllQuestions(state, props, pageIndex, questionsPerPage)}\n      <div className='pagination-buttons'>\n        <button onClick={handlePrev} disabled={pageIndex === 0}>Prev</button>\n        <button onClick={handleNext} disabled={pageIndex === numPages - 1}>Next</button>\n      </div>\n    </>\n  );\n}\n\nconst displayAllQuestions = (state, props, pageIndex, questionsPerPage) => {\n  let questions = model.questions;\n\n  if (state === 0) {\n    sortByDate(questions);\n  }\n\n  if (state === 1) {\n    questions.sort((a, b) => {\n      const latestAnswerA = findlatestAnswer(a, model);\n      const latestAnswerB = findlatestAnswer(b, model);\n\n      if (latestAnswerA && latestAnswerB) {\n        return new Date(latestAnswerB.ans_date_time) - new Date(latestAnswerA.ans_date_time);\n      } else if (latestAnswerA) {\n        return -1;\n      } else if (latestAnswerB) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n\n  if (state === 2) {\n    questions = questions.filter(question => question.answers.length === 0);\n  }\n\n\n  const start = pageIndex * questionsPerPage;\n  const end = start + questionsPerPage;\n  const questionsToShow = questions.slice(start, end);\n\n  return (\n    <>\n      {questionsToShow.map((question) => (\n        <DisplayQuestion question={question} model={model} props={props} key={question._id} />\n      ))}\n    </>\n  );\n};\n\nconst DisplayQuestion = ({ question, model, props }) => {\n  return (\n    <div className=\"container2\">\n      <pre className=\"left\">\n        {getAnsPerQuestion(question) + \" answers\\n\" + question.views + \" views\\n\" + question.votes + \" votes\"}\n      </pre>\n      <a className=\"middle\" href=\"#\" onClick={uploadQuestion.bind(null, question, props)}>\n        {question.title}\n      </a>\n      <p className=\"right\">\n        <span className=\"askedBy\">{getUser(question.askedBy).first_name + \" \" +getUser(question.askedBy).last_name}</span>\n        <span className=\"askDate\"> asked {findDate(new Date(question.ask_date_time))}</span>\n      </p>\n      <p className='summary'>\n        {\"Summary: \" + question.summary}\n      </p>\n      <TagDisplay question={question} model={model} />\n    </div>\n  );\n};\n\nconst TagDisplay = ({ question, model }) => {\n  return (\n    <div className=\"tagContainer\">\n      {question.tags.map((tagId) => {\n        const tag = getTag(tagId);\n        return (\n          <p className=\"bottom\" key={tagId}>\n            {tag}\n          </p>\n        );\n      })}\n    </div>\n  );\n};\n\n\nfunction findDate(date) {\n  const now = new Date();\n  const diff = now - date;\n  const seconds = Math.floor(diff / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n\n  const dayOfMonth = date.getDate();\n  const month = date.toLocaleString('en-us', { month: 'short' });\n  const year = date.getFullYear();\n  const hour = date.getHours();\n  const minute = date.getMinutes().toString().padStart(2, '0');\n\n  if (days < 1) {\n    if (hours < 1) {\n      if (minutes < 1) {\n        return seconds + \" seconds ago\";\n      } else {\n        return minutes + \" minutes ago\";\n      }\n    } else {\n      return hours + \" hours ago\";\n    }\n  } else if (days < 2) {\n    return `${month} ${dayOfMonth} at ${hour}:${minute}`;\n  } else {\n    return `${month} ${dayOfMonth}, ${year} at ${hour}:${minute}`;\n  }\n}\n\nfunction sortByDate(list) {\n  list.sort((a, b) => new Date(b.ask_date_time) - new Date(a.ask_date_time));\n}\n\nfunction findlatestAnswer(question, model) {\n\n  let latestAnswer = null;\n\n  question.answers.forEach(ans => {\n    const ans2 = getAnswer(ans._id);\n    if (!latestAnswer || new Date(ans2.ans_date_time) > new Date(latestAnswer.ans_date_time)) {\n      latestAnswer = ans2;\n    }\n  });\n\n  return latestAnswer;\n}\n\n// function uploadQuestion(question, props) {\n//   question.views++;\n//   model.questions.find(qtn => qtn._id === question._id).views = question.views;\n//   localStorage.setItem(\"currentQuestion\", JSON.stringify(question));\n//   props.setPage(5);\n// }\n\nasync function uploadQuestion(question, props) {\n  try {\n    // Increment views count in the database\n    const updatedQuestion = await axios.put(`http://localhost:8000/api/questions/${question._id}`, {\n      ...question,\n      views: question.views + 1 // Increment views count by 1\n    });\n\n    // Update the currentQuestion in localStorage\n    localStorage.setItem(\"currentQuestion\", JSON.stringify(updatedQuestion.data));\n\n    // Update the question views in the model\n    const index = model.questions.findIndex(qtn => qtn._id === question._id);\n    if (index !== -1) {\n      model.questions[index].views = updatedQuestion.data.views;\n    }\n\n    // Navigate to page 5\n    props.setPage(5);\n  } catch (error) {\n    console.error(\"Error uploading question:\", error);\n  }\n}\n\n\nfunction getAnsPerQuestion(q) {\n  return q.answers.length;\n}\n\nfunction getTag(tagId) {\n  if (model.tags.find(tag => tag._id === tagId) === undefined) {\n    return;\n  }\n\n  return model.tags.find(tag => tag._id === tagId).name;\n}\n\nfunction getAnswer(aid) {\n  return model.answers.find(ans => aid === ans._id);\n}\n\nfunction getUser(uid) {\n  return model.users.find(user => user._id === uid);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}