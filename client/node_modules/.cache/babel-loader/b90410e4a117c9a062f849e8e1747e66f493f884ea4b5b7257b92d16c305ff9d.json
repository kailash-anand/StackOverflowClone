{"ast":null,"code":"var _jsxFileName = \"/Users/kailashanand/StackOverflowClone/client/src/components/newQuestion.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from 'axios';\nimport { Header, Sidebar } from \"./headerAndSidebar\";\nimport '../stylesheets/newQuestion.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet model = null;\nexport const Questionsform = props => {\n  _s();\n  model = props.data;\n  let [title, setTitle] = React.useState(\"\");\n  let [summary, setSummary] = React.useState(\"\");\n  let [text, setText] = React.useState(\"\");\n  let [tags, setTags] = React.useState(\"\");\n  React.useEffect(() => {\n    if (props.data.currentEditQuestion != null) {\n      setTitle(props.data.currentEditQuestion.title || \"\");\n      setSummary(props.data.currentEditQuestion.summary || \"\");\n      setText(props.data.currentEditQuestion.text || \"\");\n      const tagsString = props.data.currentEditQuestion.tags.map(tagId => getTag(tagId)).join(\" \");\n      setTags(tagsString);\n    }\n  }, [props.data.currentEditQuestion]);\n  const submitForm = async event => {\n    try {\n      event.preventDefault();\n      const data = [{\n        title: title,\n        summary: summary,\n        text: text,\n        tags: tags\n      }];\n      if (validateMandatoryFields(data[0]) === -1) {\n        event.preventDefault();\n        return;\n      }\n      let question;\n      if (props.data.currentEditQuestion == null) {\n        question = createQuestion(data[0], model);\n      } else {\n        question = {\n          ...props.data.currentEditQuestion,\n          // Keep existing properties\n          ...data[0] // Update with new form data\n        };\n      }\n      const inputTags = tags.split(/\\s+/).filter(tag => tag.trim() !== '');\n\n      // Fetch existing tags\n      const existingTagsResponse = await axios.get('http://localhost:8000/api/tags');\n      const existingTags = existingTagsResponse.data;\n\n      // Determine which tags need to be added to the database\n      const newTagNames = inputTags.filter(tag => !existingTags.some(et => et.name === tag));\n      const newTags = newTagNames.map(tagName => ({\n        name: tagName,\n        createdBy: model.currentUser._id\n      }));\n      console.log(newTags);\n      const tagPromises = newTags.map(tag => {\n        return axios.post('http://localhost:8000/api/tags', tag);\n      });\n      const responses = await Promise.all(tagPromises);\n      const createdTags = responses.map(response => response.data);\n      const fullTagObjects = inputTags.map(tag => existingTags.find(et => et.name === tag) || createdTags.find(ct => ct.name === tag));\n      question.tags = fullTagObjects;\n\n      // If it's a new question, use POST; otherwise, use PUT\n      const requestMethod = props.data.currentEditQuestion == null ? axios.post : axios.put;\n\n      // If it's an edit, include the question ID in the URL\n      const requestURL = props.data.currentEditQuestion == null ? 'http://localhost:8000/api/questions' : `http://localhost:8000/api/questions/${props.data.currentEditQuestion._id}`;\n\n      // Send the request to save/update the question\n      await requestMethod(requestURL, question);\n      setTitle(\"\");\n      setSummary(\"\");\n      setText(\"\");\n      setTags(\"\");\n      props.setPage(3);\n      props.setData(null);\n    } catch (error) {\n      console.error('Error adding question:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      page: props.page,\n      setPage: props.setPage,\n      data: props.data,\n      setData: props.setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      page: props.page,\n      setPage: props.setPage,\n      data: props.data,\n      setData: props.setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qform\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"get\",\n        target: \"_self\",\n        onSubmit: submitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"qtitle\",\n          className: \"title\",\n          children: [\" Question Title \", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 79\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 101\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"helpText\",\n          children: \" Limit title to 100 characters or less \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: event => setTitle(event.target.value),\n          name: \"questionTitle\",\n          id: \"qtitle\",\n          placeholder: \"Input title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 168\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"titleError\",\n          id: \"titleError\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"qtext\",\n          className: \"text\",\n          children: [\" Question Text \", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 76\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 98\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"helpText\",\n          children: \" Add details \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: event => setText(event.target.value),\n          name: \"questionText\",\n          id: \"qtext\",\n          placeholder: \"Input text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 162\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"textError\",\n          id: \"textError\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"qsummary\",\n          className: \"summary2\",\n          children: [\" Question Summary \", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 107\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"helpText\",\n          children: \" Add a question summary \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: summary,\n          onChange: event => setSummary(event.target.value),\n          name: \"summaryText\",\n          id: \"qsummary\",\n          placeholder: \"Input summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 179\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"summaryError\",\n          id: \"summaryError\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"qtag\",\n          className: \"tags\",\n          children: [\" Tags \", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 66\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 88\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"helpText\",\n          children: \" Add keywords seperated by whitespace \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: tags,\n          onChange: event => setTags(event.target.value),\n          name: \"questionTags\",\n          id: \"qtag\",\n          placeholder: \"Input tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 161\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tagError\",\n          id: \"tagError\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          id: \"qsubmit\",\n          value: \"Post Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mandatory\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 47\n          }, this), \" indicates mandatory fields \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Questionsform, \"7H0BThC8jjuCSbLVype/vjAIy7s=\");\n_c = Questionsform;\nfunction validateMandatoryFields(data) {\n  const titleError = document.getElementById(\"titleError\");\n  const summaryError = document.getElementById('summaryError');\n  const textError = document.getElementById(\"textError\");\n  const tagError = document.getElementById(\"tagError\");\n  const title = data.title;\n  const summary = data.summary;\n  const text = data.text;\n  const tags = data.tags;\n  const tagArray = tags.split(/\\s+/);\n  let check = false;\n  const hyperlinkPattern = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s\\)]+)\\)/g;\n  const invalidLinks = data.text.match(hyperlinkPattern) === null && data.text.includes('[') && data.text.includes(']') && data.text.includes('(') && data.text.includes(')');\n  if (!title.trim()) {\n    titleError.textContent = \"Please enter a title\";\n    check = true;\n  } else if (title.length > 50) {\n    titleError.textContent = \"Character length cannot exceed 50\";\n  } else {\n    titleError.textContent = \"\";\n  }\n  if (!text.trim()) {\n    textError.textContent = \"Please enter a text\";\n    check = true;\n  } else if (invalidLinks) {\n    textError.textContent = \"Hyperlink must begin with 'http://' or 'https://'\";\n    check = true;\n  } else {\n    textError.textContent = \"\";\n  }\n  if (!summary.trim()) {\n    summaryError.textContent = \"Please enter a summary\";\n    check = true;\n  } else if (summary.length > 140) {\n    summary.textContent = \"Character length cannot exceed 140\";\n  } else {\n    summaryError.textContent = \"\";\n  }\n  if (!tags.trim()) {\n    tagError.textContent = \"Please enter a tag\";\n    check = true;\n  } else if (tagArray.length > 5) {\n    tagError.textContent = \"There cannot be more than 5 tags\";\n    check = true;\n  } else {\n    tagError.textContent = \"\";\n  }\n  tagArray.forEach(tag => {\n    if (tag.length > 20) {\n      check = true;\n      tagError.textContent = \"One or more tags has more than 20 characters\";\n    }\n  });\n  if (check) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\nfunction createQuestion(data, tempModel) {\n  const newQuestion = {\n    title: data.title,\n    summary: data.summary,\n    text: data.text,\n    tags: [],\n    answers: [],\n    askedBy: tempModel.currentUser._id,\n    ask_date_time: new Date().getTime(),\n    views: 0,\n    votes: 0,\n    comments: []\n  };\n  fillTags(newQuestion, data.tags, tempModel);\n  return newQuestion;\n}\nfunction fillTags(question, tags, tempModel) {\n  const tagsArray = tags.split(/\\s+/);\n  const filteredArray = tagsArray.filter(element => element.trim() !== '');\n  const tagSet = new Set(filteredArray);\n  tagSet.forEach(tag => {\n    const existingTag = tempModel.tags.find(tagItem => tagItem.name === tag);\n    if (existingTag !== undefined) {\n      question.tags.push(existingTag);\n    } else {\n      const newTag = {\n        name: tag,\n        createdBy: model.currentUser._id\n      };\n      question.tags.push(newTag);\n    }\n  });\n}\nfunction getTag(tagId) {\n  if (model.tags.find(tag => tag._id === tagId) === undefined) {\n    return;\n  }\n  return model.tags.find(tag => tag._id === tagId).name;\n}\nvar _c;\n$RefreshReg$(_c, \"Questionsform\");","map":{"version":3,"names":["React","axios","Header","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","model","Questionsform","props","_s","data","title","setTitle","useState","summary","setSummary","text","setText","tags","setTags","useEffect","currentEditQuestion","tagsString","map","tagId","getTag","join","submitForm","event","preventDefault","validateMandatoryFields","question","createQuestion","inputTags","split","filter","tag","trim","existingTagsResponse","get","existingTags","newTagNames","some","et","name","newTags","tagName","createdBy","currentUser","_id","console","log","tagPromises","post","responses","Promise","all","createdTags","response","fullTagObjects","find","ct","requestMethod","put","requestURL","setPage","setData","error","children","page","fileName","_jsxFileName","lineNumber","columnNumber","className","method","target","onSubmit","htmlFor","type","value","onChange","id","placeholder","_c","titleError","document","getElementById","summaryError","textError","tagError","tagArray","check","hyperlinkPattern","invalidLinks","match","includes","textContent","length","forEach","tempModel","newQuestion","answers","askedBy","ask_date_time","Date","getTime","views","votes","comments","fillTags","tagsArray","filteredArray","element","tagSet","Set","existingTag","tagItem","undefined","push","newTag","$RefreshReg$"],"sources":["/Users/kailashanand/StackOverflowClone/client/src/components/newQuestion.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Header, Sidebar } from \"./headerAndSidebar\";\nimport '../stylesheets/newQuestion.css';\n\nlet model = null;\n\nexport const Questionsform = (props) => {\n\n    model = props.data;\n\n    let [title, setTitle] = React.useState(\"\");\n    let [summary, setSummary] = React.useState(\"\");\n    let [text, setText] = React.useState(\"\");\n    let [tags, setTags] = React.useState(\"\");\n\n    React.useEffect(() => {\n        if (props.data.currentEditQuestion != null) {\n            setTitle(props.data.currentEditQuestion.title || \"\");\n            setSummary(props.data.currentEditQuestion.summary || \"\");\n            setText(props.data.currentEditQuestion.text || \"\");\n            const tagsString = props.data.currentEditQuestion.tags.map(tagId => getTag(tagId)).join(\" \");\n            setTags(tagsString);\n        }\n    }, [props.data.currentEditQuestion]);\n\n    const submitForm = async (event) => {\n        try {\n            event.preventDefault();\n            const data = [\n                {\n                    title: title,\n                    summary: summary,\n                    text: text,\n                    tags: tags,\n                },\n            ];\n\n            if (validateMandatoryFields(data[0]) === -1) {\n                event.preventDefault();\n                return;\n            }\n\n            let question;\n            if (props.data.currentEditQuestion == null) {\n                question = createQuestion(data[0], model);\n            } else {\n                question = {\n                    ...props.data.currentEditQuestion, // Keep existing properties\n                    ...data[0] // Update with new form data\n                };\n            }\n\n            const inputTags = tags.split(/\\s+/).filter(tag => tag.trim() !== '');\n\n            // Fetch existing tags\n            const existingTagsResponse = await axios.get('http://localhost:8000/api/tags');\n            const existingTags = existingTagsResponse.data;\n\n            // Determine which tags need to be added to the database\n            const newTagNames = inputTags.filter(tag => !existingTags.some(et => et.name === tag));\n            const newTags = newTagNames.map(tagName => ({ name: tagName, createdBy: model.currentUser._id }));\n\n            console.log(newTags);\n\n            const tagPromises = newTags.map(tag => {\n                return axios.post('http://localhost:8000/api/tags', tag);\n            });\n            const responses = await Promise.all(tagPromises);\n            const createdTags = responses.map(response => response.data);\n\n            const fullTagObjects = inputTags.map(tag => existingTags.find(et => et.name === tag) || createdTags.find(ct => ct.name === tag));\n\n            question.tags = fullTagObjects;\n\n            // If it's a new question, use POST; otherwise, use PUT\n            const requestMethod = props.data.currentEditQuestion == null ? axios.post : axios.put;\n\n            // If it's an edit, include the question ID in the URL\n            const requestURL = props.data.currentEditQuestion == null ? 'http://localhost:8000/api/questions' : `http://localhost:8000/api/questions/${props.data.currentEditQuestion._id}`;\n\n            // Send the request to save/update the question\n            await requestMethod(requestURL, question);\n\n\n            setTitle(\"\");\n            setSummary(\"\");\n            setText(\"\");\n            setTags(\"\");\n\n            props.setPage(3);\n            props.setData(null);\n        }\n        catch (error) {\n            console.error('Error adding question:', error);\n        }\n    }\n\n    return (\n        <>\n            <Header page={props.page} setPage={props.setPage} data={props.data} setData={props.setData} />\n            <Sidebar page={props.page} setPage={props.setPage} data={props.data} setData={props.setData} />\n            <div className='qform'>\n                <form method=\"get\" target=\"_self\" onSubmit={submitForm} >\n\n                    <label htmlFor=\"qtitle\" className=\"title\"> Question Title <sup>*</sup> </label> <br />\n                    <p className=\"helpText\"> Limit title to 100 characters or less </p>\n                    <input type=\"text\" value={title} onChange={(event) => setTitle(event.target.value)} name=\"questionTitle\" id=\"qtitle\" placeholder=\"Input title\" />  <br />\n                    <p className=\"titleError\" id=\"titleError\"></p>\n\n                    <label htmlFor=\"qtext\" className=\"text\"> Question Text <sup>*</sup> </label> <br />\n                    <p className=\"helpText\"> Add details </p>\n                    <input type=\"text\" value={text} onChange={(event) => setText(event.target.value)} name=\"questionText\" id=\"qtext\" placeholder=\"Input text\" /> <br />\n                    <p className=\"textError\" id=\"textError\"></p>\n\n                    <label htmlFor='qsummary' className='summary2'> Question Summary <sup>*</sup></label> <br />\n                    <p className='helpText'> Add a question summary </p>\n                    <input type='text' value={summary} onChange={(event) => setSummary(event.target.value)} name='summaryText' id='qsummary' placeholder='Input summary'></input> <br />\n                    <p className='summaryError' id='summaryError'></p>\n\n                    <label htmlFor=\"qtag\" className=\"tags\"> Tags <sup>*</sup> </label> <br />\n                    <p className=\"helpText\"> Add keywords seperated by whitespace </p>\n                    <input type=\"text\" value={tags} onChange={(event) => setTags(event.target.value)} name=\"questionTags\" id=\"qtag\" placeholder=\"Input tags\" /> <br />\n                    <p className=\"tagError\" id=\"tagError\"></p>\n\n                    <input type=\"submit\" id=\"qsubmit\" value=\"Post Question\" />\n                    <p className=\"mandatory\"> <sup>*</sup> indicates mandatory fields </p>\n                </form>\n            </div>\n        </>\n    );\n}\n\nfunction validateMandatoryFields(data) {\n    const titleError = document.getElementById(\"titleError\");\n    const summaryError = document.getElementById('summaryError');\n    const textError = document.getElementById(\"textError\");\n    const tagError = document.getElementById(\"tagError\");\n\n    const title = data.title;\n    const summary = data.summary;\n    const text = data.text;\n    const tags = data.tags;\n\n    const tagArray = tags.split(/\\s+/);\n\n    let check = false;\n    const hyperlinkPattern = /\\[([^\\]]+)\\]\\((https?:\\/\\/[^\\s\\)]+)\\)/g;\n    const invalidLinks = data.text.match(hyperlinkPattern) === null && data.text.includes('[') && data.text.includes(']') && data.text.includes('(') && data.text.includes(')');\n\n\n    if (!title.trim()) {\n        titleError.textContent = \"Please enter a title\";\n        check = true;\n    }\n    else if (title.length > 50) {\n        titleError.textContent = \"Character length cannot exceed 50\";\n    }\n    else { titleError.textContent = \"\"; }\n\n    if (!text.trim()) {\n        textError.textContent = \"Please enter a text\";\n        check = true;\n    }\n    else if (invalidLinks) {\n        textError.textContent = \"Hyperlink must begin with 'http://' or 'https://'\";\n        check = true;\n    } else {\n        textError.textContent = \"\";\n    }\n\n    if (!summary.trim()) {\n        summaryError.textContent = \"Please enter a summary\";\n        check = true;\n    }\n    else if (summary.length > 140) {\n        summary.textContent = \"Character length cannot exceed 140\";\n    }\n    else { summaryError.textContent = \"\"; }\n\n    if (!tags.trim()) {\n        tagError.textContent = \"Please enter a tag\";\n        check = true;\n    }\n    else if (tagArray.length > 5) {\n        tagError.textContent = \"There cannot be more than 5 tags\";\n        check = true;\n    }\n    else { tagError.textContent = \"\"; }\n\n    tagArray.forEach(tag => {\n        if (tag.length > 20) {\n            check = true;\n            tagError.textContent = \"One or more tags has more than 20 characters\";\n        }\n    })\n\n    if (check) {\n        return -1;\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction createQuestion(data, tempModel) {\n    const newQuestion = {\n        title: data.title,\n        summary: data.summary,\n        text: data.text,\n        tags: [],\n        answers: [],\n        askedBy: tempModel.currentUser._id,\n        ask_date_time: new Date().getTime(),\n        views: 0,\n        votes: 0,\n        comments: []\n    }\n    fillTags(newQuestion, data.tags, tempModel);\n\n    return newQuestion;\n}\n\nfunction fillTags(question, tags, tempModel) {\n    const tagsArray = tags.split(/\\s+/);\n    const filteredArray = tagsArray.filter(element => element.trim() !== '');\n    const tagSet = new Set(filteredArray);\n\n    tagSet.forEach(tag => {\n        const existingTag = tempModel.tags.find(tagItem => tagItem.name === tag);\n        if (existingTag !== undefined) {\n            question.tags.push(existingTag);\n        }\n        else {\n            const newTag = {\n                name: tag,\n                createdBy: model.currentUser._id\n            }\n            question.tags.push(newTag);\n        }\n    });\n}\n\nfunction getTag(tagId) {\n    if (model.tags.find(tag => tag._id === tagId) === undefined) {\n        return;\n    }\n\n    return model.tags.find(tag => tag._id === tagId).name;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}