{"ast":null,"code":"var _jsxFileName = \"/Users/kailashanand/StackOverflowClone/client/src/components/search.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Header, Sidebar } from \"./headerAndSidebar\";\nimport { Head } from \"./bodyHeader\";\nimport '../stylesheets/homePage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet model = null;\nexport const SearchQuery = props => {\n  _s();\n  model = props.data;\n  const [searchQuestions, setSearchQuestions] = React.useState([]);\n  const [state, selectState] = React.useState(0);\n  React.useEffect(() => {\n    let searchQuery = localStorage.getItem(\"searchQuery\") || \"\";\n    const regex = /\\[([^\\]]+)\\]/g;\n    let tag,\n      searchTags = [];\n    while ((tag = regex.exec(searchQuery)) !== null) {\n      searchTags.push(tag[1].toLowerCase().trim());\n    }\n    let tagIds = searchTags.map(tagName => {\n      var _model$tags$find;\n      return (_model$tags$find = model.tags.find(tag => tag.name.toLowerCase() === tagName)) === null || _model$tags$find === void 0 ? void 0 : _model$tags$find._id;\n    }).filter(tid => tid !== undefined);\n    let filteredQuestions = model.questions.filter(question => {\n      const questionTagsMatch = tagIds.length === 0 || question.tags.some(tagId => tagIds.includes(tagId));\n      const searchText = searchQuery.replace(regex, '').trim().toLowerCase();\n      const questionTextMatch = searchText === \"\" || question.title.toLowerCase().includes(searchText) || question.text.toLowerCase().includes(searchText);\n      console.log(`Question ${question._id} - Tag Match: ${questionTagsMatch}, Text Match: ${questionTextMatch}`);\n      return questionTagsMatch && questionTextMatch;\n    });\n    console.log(\"Filtered Questions:\", filteredQuestions);\n    setSearchQuestions([...new Map(filteredQuestions.map(q => [q.qid, q])).values()]);\n  }, []);\n  console.log(searchQuestions);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      page: props.page,\n      setPage: props.setPage,\n      data: props.data,\n      setData: props.setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      page: props.page,\n      setPage: props.setPage,\n      data: props.data,\n      setData: props.setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Head, {\n      page: props.page,\n      setPage: props.setPage,\n      state: state,\n      selectState: selectState,\n      model: props.data,\n      data: props.data,\n      setData: props.setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), displayAllQuestions(state, searchQuestions, props)]\n  }, void 0, true);\n};\n_s(SearchQuery, \"xVR21fpMu2Ip7fHmDn0a/+khFEk=\");\n_c = SearchQuery;\nconst displayAllQuestions = (state, questions, props) => {\n  let sortedQuestions = [...questions];\n  if (state === 0) {\n    sortByDate(sortedQuestions);\n  } else if (state === 1) {\n    sortedQuestions.sort((a, b) => {\n      const latestAnswerA = findlatestAnswer(a, model);\n      const latestAnswerB = findlatestAnswer(b, model);\n      if (latestAnswerA && latestAnswerB) {\n        return new Date(latestAnswerB.ans_date_time) - new Date(latestAnswerA.ans_date_time);\n      } else if (latestAnswerA) {\n        return -1;\n      } else if (latestAnswerB) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  } else if (state === 2) {\n    sortedQuestions = sortedQuestions.filter(question => question.answers.length === 0);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: sortedQuestions.map(question => /*#__PURE__*/_jsxDEV(DisplayQuestion, {\n      question: question,\n      model: model,\n      props: props\n    }, question._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\nconst DisplayQuestion = ({\n  question,\n  model,\n  props\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container2\",\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"left\",\n      children: getAnsPerQuestion(question) + \" answers\\n\" + question.views + \" views\\n\" + question.votes + \" votes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"middle\",\n      href: \"#\",\n      onClick: uploadQuestion.bind(null, question, props),\n      children: question.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"askedBy\",\n        children: getUser(question.askedBy).first_name + \" \" + getUser(question.askedBy).last_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"askDate\",\n        children: [\" asked \", findDate(new Date(question.ask_date_time))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"summary\",\n      children: \"Summary: \" + question.summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TagDisplay, {\n      question: question,\n      model: model\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }, this);\n};\n_c2 = DisplayQuestion;\nconst TagDisplay = ({\n  question,\n  model\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tagContainer\",\n    children: question.tags.map(tagId => {\n      const tag = getTag(tagId);\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bottom\",\n        children: tag\n      }, tagId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 7\n  }, this);\n};\n_c3 = TagDisplay;\nfunction findDate(date) {\n  const now = new Date();\n  const diff = now - date;\n  const seconds = Math.floor(diff / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n  const dayOfMonth = date.getDate();\n  const month = date.toLocaleString('en-us', {\n    month: 'short'\n  });\n  const year = date.getFullYear();\n  const hour = date.getHours();\n  const minute = date.getMinutes().toString().padStart(2, '0');\n  if (days < 1) {\n    if (hours < 1) {\n      if (minutes < 1) {\n        return seconds + \" seconds ago\";\n      } else {\n        return minutes + \" minutes ago\";\n      }\n    } else {\n      return hours + \" hours ago\";\n    }\n  } else if (days < 2) {\n    return `${month} ${dayOfMonth} at ${hour}:${minute}`;\n  } else {\n    return `${month} ${dayOfMonth}, ${year} at ${hour}:${minute}`;\n  }\n}\nfunction sortByDate(list) {\n  list.sort((a, b) => new Date(b.ask_date_time) - new Date(a.ask_date_time));\n}\nfunction findlatestAnswer(question, model) {\n  let latestAnswer = null;\n  question.answers.forEach(ans => {\n    const ans2 = getAnswer(ans._id);\n    if (!latestAnswer || new Date(ans2.ans_date_time) > new Date(latestAnswer.ans_date_time)) {\n      latestAnswer = ans2;\n    }\n  });\n  return latestAnswer;\n}\nfunction uploadQuestion(question, props) {\n  question.views++;\n  model.questions.find(qtn => qtn._id === question._id).views = question.views;\n  localStorage.setItem(\"currentQuestion\", JSON.stringify(question));\n  props.setPage(5);\n}\nfunction getAnsPerQuestion(q) {\n  return q.answers.length;\n}\nfunction getTag(tagId) {\n  if (model.tags.find(tag => tag._id === tagId) === undefined) {\n    return;\n  }\n  return model.tags.find(tag => tag._id === tagId).name;\n}\nfunction getAnswer(aid) {\n  return model.answers.find(ans => aid === ans._id);\n}\nfunction getUser(uid) {\n  return model.users.find(user => user._id === uid);\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SearchQuery\");\n$RefreshReg$(_c2, \"DisplayQuestion\");\n$RefreshReg$(_c3, \"TagDisplay\");","map":{"version":3,"names":["React","Header","Sidebar","Head","jsxDEV","_jsxDEV","Fragment","_Fragment","model","SearchQuery","props","_s","data","searchQuestions","setSearchQuestions","useState","state","selectState","useEffect","searchQuery","localStorage","getItem","regex","tag","searchTags","exec","push","toLowerCase","trim","tagIds","map","tagName","_model$tags$find","tags","find","name","_id","filter","tid","undefined","filteredQuestions","questions","question","questionTagsMatch","length","some","tagId","includes","searchText","replace","questionTextMatch","title","text","console","log","Map","q","qid","values","children","page","setPage","setData","fileName","_jsxFileName","lineNumber","columnNumber","displayAllQuestions","_c","sortedQuestions","sortByDate","sort","a","b","latestAnswerA","findlatestAnswer","latestAnswerB","Date","ans_date_time","answers","DisplayQuestion","className","getAnsPerQuestion","views","votes","href","onClick","uploadQuestion","bind","getUser","askedBy","first_name","last_name","findDate","ask_date_time","summary","TagDisplay","_c2","getTag","_c3","date","now","diff","seconds","Math","floor","minutes","hours","days","dayOfMonth","getDate","month","toLocaleString","year","getFullYear","hour","getHours","minute","getMinutes","toString","padStart","list","latestAnswer","forEach","ans","ans2","getAnswer","qtn","setItem","JSON","stringify","aid","uid","users","user","$RefreshReg$"],"sources":["/Users/kailashanand/StackOverflowClone/client/src/components/search.js"],"sourcesContent":["import React from \"react\";\nimport { Header, Sidebar } from \"./headerAndSidebar\";\nimport { Head } from \"./bodyHeader\";\nimport '../stylesheets/homePage.css'\n\nlet model = null;\n\nexport const SearchQuery = (props) => {\n\n    model = props.data;\n\n    const [searchQuestions, setSearchQuestions] = React.useState([]);\n    const [state, selectState] = React.useState(0);\n\n    React.useEffect(() => {\n        let searchQuery = localStorage.getItem(\"searchQuery\") || \"\";\n        const regex = /\\[([^\\]]+)\\]/g;\n        let tag, searchTags = [];\n\n        while ((tag = regex.exec(searchQuery)) !== null) {\n            searchTags.push(tag[1].toLowerCase().trim());\n        }\n\n        let tagIds = searchTags.map(tagName =>\n            model.tags.find(tag => tag.name.toLowerCase() === tagName)?._id\n        ).filter(tid => tid !== undefined);\n\n        let filteredQuestions = model.questions.filter(question => {\n            \n            const questionTagsMatch = tagIds.length === 0 || question.tags.some(tagId => tagIds.includes(tagId));\n            const searchText = searchQuery.replace(regex, '').trim().toLowerCase();\n            const questionTextMatch = searchText === \"\" || question.title.toLowerCase().includes(searchText) || question.text.toLowerCase().includes(searchText);\n    \n            console.log(`Question ${question._id} - Tag Match: ${questionTagsMatch}, Text Match: ${questionTextMatch}`);\n    \n            return questionTagsMatch && questionTextMatch;\n        });\n\n        console.log(\"Filtered Questions:\", filteredQuestions);\n\n        setSearchQuestions([...new Map(filteredQuestions.map(q => [q.qid, q])).values()]);\n    }, []);\n\n    console.log(searchQuestions);\n\n    return (\n        <>\n            <Header page={props.page} setPage={props.setPage} data={props.data} setData={props.setData}/>\n            <Sidebar page={props.page} setPage={props.setPage} data={props.data} setData={props.setData}/>\n            <Head page={props.page} setPage={props.setPage} state={state} selectState={selectState} model={props.data} data={props.data} setData={props.setData}/>\n            {displayAllQuestions(state, searchQuestions, props)}\n        </>\n    );\n};\n\nconst displayAllQuestions = (state, questions, props) => {\n    let sortedQuestions = [...questions];\n\n    if (state === 0) {\n        sortByDate(sortedQuestions);\n    } else if (state === 1) {\n        sortedQuestions.sort((a, b) => {\n            const latestAnswerA = findlatestAnswer(a, model);\n            const latestAnswerB = findlatestAnswer(b, model);\n\n            if (latestAnswerA && latestAnswerB) {\n                return new Date(latestAnswerB.ans_date_time) - new Date(latestAnswerA.ans_date_time);\n            } else if (latestAnswerA) {\n                return -1;\n            } else if (latestAnswerB) {\n                return 1;\n            } else {\n                return 0;\n            }\n        });\n    } else if (state === 2) {\n        sortedQuestions = sortedQuestions.filter(question => question.answers.length === 0);\n    }\n\n    return (\n        <>\n            {sortedQuestions.map((question) => (\n                <DisplayQuestion question={question} model={model} props={props} key={question._id} />\n            ))}\n        </>\n    );\n};\n\nconst DisplayQuestion = ({ question, model, props }) => {\n    return (\n      <div className=\"container2\">\n        <pre className=\"left\">\n          {getAnsPerQuestion(question) + \" answers\\n\" + question.views + \" views\\n\" + question.votes + \" votes\"}\n        </pre>\n        <a className=\"middle\" href=\"#\" onClick={uploadQuestion.bind(null, question, props)}>\n          {question.title}\n        </a>\n        <p className=\"right\">\n          <span className=\"askedBy\">{getUser(question.askedBy).first_name + \" \" +getUser(question.askedBy).last_name}</span>\n          <span className=\"askDate\"> asked {findDate(new Date(question.ask_date_time))}</span>\n        </p>\n        <p className='summary'>\n          {\"Summary: \" + question.summary}\n        </p>\n        <TagDisplay question={question} model={model} />\n      </div>\n    );\n  };\n  \n  const TagDisplay = ({ question, model }) => {\n    return (\n      <div className=\"tagContainer\">\n        {question.tags.map((tagId) => {\n          const tag = getTag(tagId);\n          return (\n            <p className=\"bottom\" key={tagId}>\n              {tag}\n            </p>\n          );\n        })}\n      </div>\n    );\n  };\n  \n  \n  function findDate(date) {\n    const now = new Date();\n    const diff = now - date;\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n  \n    const dayOfMonth = date.getDate();\n    const month = date.toLocaleString('en-us', { month: 'short' });\n    const year = date.getFullYear();\n    const hour = date.getHours();\n    const minute = date.getMinutes().toString().padStart(2, '0');\n  \n    if (days < 1) {\n      if (hours < 1) {\n        if (minutes < 1) {\n          return seconds + \" seconds ago\";\n        } else {\n          return minutes + \" minutes ago\";\n        }\n      } else {\n        return hours + \" hours ago\";\n      }\n    } else if (days < 2) {\n      return `${month} ${dayOfMonth} at ${hour}:${minute}`;\n    } else {\n      return `${month} ${dayOfMonth}, ${year} at ${hour}:${minute}`;\n    }\n  }\n  \n  function sortByDate(list) {\n    list.sort((a, b) => new Date(b.ask_date_time) - new Date(a.ask_date_time));\n  }\n  \n  function findlatestAnswer(question, model) {\n  \n    let latestAnswer = null;\n  \n    question.answers.forEach(ans => {\n      const ans2 = getAnswer(ans._id);\n      if (!latestAnswer || new Date(ans2.ans_date_time) > new Date(latestAnswer.ans_date_time)) {\n        latestAnswer = ans2;\n      }\n    });\n  \n    return latestAnswer;\n  }\n  \n  function uploadQuestion(question, props) {\n    question.views++;\n    model.questions.find(qtn => qtn._id === question._id).views = question.views;\n    localStorage.setItem(\"currentQuestion\", JSON.stringify(question));\n    props.setPage(5);\n  }\n  \n  function getAnsPerQuestion(q) {\n    return q.answers.length;\n  }\n  \n  function getTag(tagId) {\n    if (model.tags.find(tag => tag._id === tagId) === undefined) {\n      return;\n    }\n  \n    return model.tags.find(tag => tag._id === tagId).name;\n  }\n  \n  function getAnswer(aid) {\n    return model.answers.find(ans => aid === ans._id);\n  }\n  \n  function getUser(uid) {\n    return model.users.find(user => user._id === uid);\n  }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}