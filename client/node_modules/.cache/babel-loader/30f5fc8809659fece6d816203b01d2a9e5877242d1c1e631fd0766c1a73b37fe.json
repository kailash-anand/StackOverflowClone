{"ast":null,"code":"var _jsxFileName = \"/Users/kailashanand/StackOverflowClone/client/src/components/answers.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React from \"react\";\nimport { Header, Sidebar } from \"./headerAndSidebar\";\nimport '../stylesheets/answers.css';\nimport { useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet model = null;\nexport const DisplayQuestionDetails = props => {\n  _s();\n  var _currentQuestion$answ;\n  model = JSON.parse(JSON.stringify(props.data));\n  const currentQuestion = JSON.parse(localStorage.getItem(\"currentQuestion\"));\n  const [currentPage, setCurrentPage] = React.useState(0);\n  const [commentPages, setCommentPages] = React.useState({});\n  //const [commentPagesA, setCommentPagesA] = React.useState({});\n  const [showCommentForm, setShowCommentForm] = useState(false); // Correctly initialized here\n  const [showCommentFormA, setShowCommentFormA] = useState(false);\n  const [currentCommentPage, setCurrentCommentPage] = useState(0);\n  const [findAnsId, setAnsId] = useState(0);\n  // state to hold the new comment text\n  const [text, setText] = React.useState(\"\");\n  const [textAc, setTextAc] = React.useState(\"\");\n  const pageSize = 5;\n  const commentPageSize = 3;\n  const tags = currentQuestion.tags.map(tagId => getTag(tagId));\n  const comments = currentQuestion.comments.map(commentId => getComment(commentId));\n  const commentsA = (_currentQuestion$answ = currentQuestion.answers) === null || _currentQuestion$answ === void 0 ? void 0 : _currentQuestion$answ.reduce((acc, answer) => {\n    var _answer$comments;\n    const answerComments = ((_answer$comments = answer.comments) === null || _answer$comments === void 0 ? void 0 : _answer$comments.map(commentId => getComment(commentId))) || [];\n    return [...acc, ...answerComments];\n  }, []);\n  const answers = currentQuestion.answers.map(answerId => getAnswer(answerId)).sort((a, b) => new Date(b.ans_date_time) - new Date(a.ans_date_time));\n  const numOfPages = Math.ceil(answers.length / pageSize);\n  const numOfCommentPages = Math.ceil(comments.length / commentPageSize);\n  const numOfCommentPagesA = Math.ceil(commentsA.length / commentPageSize);\n  const displayedComments = comments.slice(currentCommentPage * commentPageSize, (currentCommentPage + 1) * commentPageSize).sort((a, b) => new Date(a.ask_date_time) - new Date(b.ask_date_time));\n  // const displayedCommentsA = commentsA.slice(\n  //   commentPagesA * commentPageSize,\n  //   (commentPagesA + 1) * commentPageSize\n  // );\n\n  const handleNext = () => {\n    if (currentPage < numOfPages - 1) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const handlePrev = () => {\n    if (currentPage > 0) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  const handleCommentNextQ = () => {\n    if (currentCommentPage < numOfCommentPages - 1) {\n      setCurrentCommentPage(prev => prev + 1);\n    }\n  };\n  const handleCommentPrevQ = () => {\n    if (currentCommentPage > 0) {\n      setCurrentCommentPage(prev => prev - 1);\n    }\n  };\n\n  //   const handleCommentNextA = (answerId) => {\n  //     setCommentPagesA(prev => ({\n  //       ...prev,\n  //       [answerId]: ((prev[answerId] || 0) + 1)\n  //   }));\n  // };\n\n  // const handleCommentPrevA = (answerId) => {\n  //   setCommentPagesA(prev => ({\n  //     ...prev,\n  //     [answerId]: Math.max(0, (prev[answerId] || 0) - 1)\n  // }));\n  // };\n\n  const addComment = async () => {\n    const commentData = {\n      text: text,\n      authorId: model.currentUser._id,\n      ask_date_time: Date.now(),\n      votes: 0\n    };\n    try {\n      console.log(\"This is author id: \", model.currentUser._id);\n      const response = await axios.post('http://localhost:8000/api/comments', commentData);\n      const newCommentId = response.data._id; // Assuming the server returns the ID of the newly created comment\n      await axios.put(`http://localhost:8000/api/questions/${currentQuestion._id}/comments`, {\n        commentId: newCommentId\n      });\n      setText(\"\");\n      //////////////\n      /////////////\n      /////////////\n      //CHANGE HERE PAGE\n      props.setPage(3);\n      /////////////\n      ////////////\n      //////////////\n      props.setData(null);\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  const incVote = () => {};\n  const decVote = () => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      page: props.page,\n      setPage: props.setPage,\n      data: props.data,\n      setData: props.setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      page: props.page,\n      setPage: props.setPage,\n      data: props.data,\n      setData: props.setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionDetails\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"questionTitle\",\n          children: currentQuestion.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"answersCount\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Answers:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 53\n            }, this), \" \", currentQuestion.answers.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"viewsCount\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Views:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 51\n            }, this), \" \", currentQuestion.views]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"votesCount\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Votes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 51\n            }, this), \" \", currentQuestion.votes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"subheading\",\n          children: \"Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"questionText\",\n          children: currentQuestion.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"subheading\",\n          children: \"Tags:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tagsContainer\",\n          children: tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tag\",\n            children: tag.name\n          }, tag._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 42\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"subheading\",\n          children: \"Asked by:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"askedBy\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"username\",\n            children: getUser(currentQuestion.askedBy).first_name + \" \" + getUser(currentQuestion.askedBy).last_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date\",\n            children: findDate(new Date(currentQuestion.ask_date_time))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"VotesContainer\",\n          children: props.data.currentUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: incVote(),\n              children: \"Upvote\"\n            }, \"upvote\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: decVote(),\n              children: \"Downvote\"\n            }, \"downvote\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"subheading\",\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commentsContainer\",\n          children: [displayedComments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"commentText\",\n              children: [comment.text, \" - \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"commentAuthor\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"by \", getUser(comment.authorId).first_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 65\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"commentDate\",\n              children: [\" on \", findDate(new Date(comment.ask_date_time))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCommentPrevQ,\n              disabled: currentCommentPage === 0 || comments.length <= 3,\n              children: \"Prev\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCommentNextQ,\n              disabled: currentCommentPage === numOfCommentPages - 1 || comments.length <= 3,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: props.data.currentUser ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"addCommentBtn\",\n              onClick: () => setShowCommentForm(true),\n              children: \"Add Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), showCommentForm && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              maxLength: \"140\",\n              placeholder: \"Write your comment here...\",\n              value: text,\n              onChange: e => setText(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addComment,\n              children: \"Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowCommentForm(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"answersSubtitle\",\n        children: \"Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }, this), DisplayAllAnswers(props, model, currentQuestion, currentPage, setCurrentPage)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(DisplayQuestionDetails, \"PUnbcpej087UHEPblWOLAhHFNEY=\");\n_c = DisplayQuestionDetails;\nconst DisplayAllAnswers = (props, model, currentQuestion, currentPage, setCurrentPage) => {\n  _s2();\n  const pageSize = 5;\n  const answers = currentQuestion.answers.map(answerId => getAnswer(answerId)).sort((a, b) => new Date(b.ans_date_time) - new Date(a.ans_date_time));\n  const [textA, setTextA] = React.useState(\"\");\n  const [showAnswerForm, setShowAnswerForm] = React.useState(false);\n  const numOfPages = Math.ceil(answers.length / pageSize);\n  const displayedAnswers = answers.slice(currentPage * pageSize, (currentPage + 1) * pageSize);\n  const handleNext = () => {\n    if (currentPage < numOfPages - 1) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const handlePrev = () => {\n    if (currentPage > 0) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  const answerQuestion = async () => {\n    try {\n      const answerData = {\n        text: textA,\n        // Replace with the actual answer text\n        ans_by: model.currentUser._id,\n        // Assuming you have the current user ID\n        ans_date_time: Date.now(),\n        // Assuming you want to use the current date/time\n        votes: 0 // You can set initial votes to 0 or any default value\n      };\n\n      // Make PUT request to add answer\n      const response = await axios.post(`http://localhost:8000/api/answers`, answerData);\n      const newAnswerId = response.data._id;\n      console.log(\"This is current question id: \\n\", currentQuestion._id);\n      console.log(\"This is answer id: \\n\", newAnswerId);\n      await axios.put(`http://localhost:8000/api/questions/${currentQuestion._id}/answers`, {\n        answerId: newAnswerId\n      });\n      console.log(\"Reached here!\");\n      // Handle response (optional)\n      setTextA(\"\");\n      props.setPage(3);\n      props.setData(null);\n      // Optionally, you can update the state or perform other actions after adding the answer\n    } catch (error) {\n      console.error(\"Error adding answer:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [displayedAnswers.map(answer => /*#__PURE__*/_jsxDEV(AnswersList, {\n      props: props,\n      answer: answer\n    }, answer._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrev,\n        disabled: currentPage === 0 || answers.length <= pageSize,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: currentPage === numOfPages - 1 || answers.length <= pageSize,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }, this), showAnswerForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        maxLength: \"500\",\n        placeholder: \"Write your answer here...\",\n        value: textA,\n        onChange: e => setTextA(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: answerQuestion,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAnswerForm(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this), props.data.currentUser ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"answerQuestionBtn\",\n      onClick: () => setShowAnswerForm(true),\n      children: \"Answer Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 73\n    }, this)]\n  }, void 0, true);\n};\n_s2(DisplayAllAnswers, \"u2OYABASvXqypMnvYy0SZCq8prM=\");\n_c2 = DisplayAllAnswers;\nconst AnswersList = ({\n  props,\n  answer,\n  setPage,\n  setData\n}) => {\n  _s3();\n  const [commentPagesA, setCommentPagesA] = React.useState({});\n  const [showCommentFormA, setShowCommentFormA] = React.useState(false);\n  const [textAc, setTextAc] = React.useState(\"\");\n  const commentPageSize = 3;\n  const handleCommentNextA = answerId => {\n    setCommentPagesA(prev => ({\n      ...prev,\n      [answerId]: (prev[answerId] || 0) + 1\n    }));\n  };\n  const handleCommentPrevA = answerId => {\n    setCommentPagesA(prev => ({\n      ...prev,\n      [answerId]: Math.max(0, (prev[answerId] || 0) - 1)\n    }));\n  };\n  const addCommentA = async answerId => {\n    const commentData = {\n      text: textAc,\n      authorId: model.currentUser._id,\n      ask_date_time: Date.now(),\n      votes: 0\n    };\n    console.log(\"This is answer ID: \", answerId);\n    try {\n      const response = await axios.post('http://localhost:8000/api/comments', commentData);\n      const newCommentId = response.data._id; // Assuming the server returns the ID of the newly created comment\n      await axios.put(`http://localhost:8000/api/answers/${answerId}/comments`, {\n        commentId: newCommentId\n      });\n      setTextAc(\"\");\n      props.setPage(3);\n      props.setData(null);\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"answer\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"answerText\",\n      children: answer.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerFooter\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"answerVotes\",\n        children: [answer.votes, \" Votes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"answerDetails\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"answerAuthor\",\n          children: [getUser(answer.ans_by).first_name, \" \", getUser(answer.ans_by).last_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"answerDate\",\n          children: findDate(new Date(answer.ans_date_time))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"subheadingA\",\n      children: \"Comments:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentsContainerA\",\n      children: [answer.comments.map(commentId => getComment(commentId)) // Convert IDs to comment objects\n      .reverse() // Reverse the array to start from the last element\n      .slice((commentPagesA[answer._id] || 0) * commentPageSize, ((commentPagesA[answer._id] || 0) + 1) * commentPageSize) // Paginate the comments\n      .map(comment => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commentA\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"commentText\",\n            children: [comment.text, \" - \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"by \", getUser(comment.authorId).first_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 53\n            }, this), \" on \", findDate(new Date(comment.ask_date_time))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 9\n          }, this)\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 7\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paginationAc\",\n        children: [props.data.currentUser ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"addCommentBtn\",\n          onClick: () => setShowCommentFormA(true),\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 40\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 141\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCommentPrevA(answer._id),\n            disabled: commentPagesA[answer._id] < 1 || answer.comments.length <= 3,\n            children: \"Prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCommentNextA(answer._id),\n            disabled: commentPagesA[answer._id] >= Math.ceil(answer.comments.length / commentPageSize) - 1 || answer.comments.length <= commentPageSize,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this), showCommentFormA && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          maxLength: \"140\",\n          placeholder: \"Write your comment here...\",\n          value: textAc,\n          onChange: e => setTextAc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addCommentA(answer._id),\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowCommentFormA(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this)]\n  }, answer._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 5\n  }, this);\n};\n_s3(AnswersList, \"ocX2H/1RKp4xi9Mslt3CJOHkrMU=\");\n_c3 = AnswersList;\nfunction sortByDate(list) {\n  list.sort((a, b) => new Date(getAnswer(b._id).ans_date_time) - new Date(getAnswer(a._id).ans_date_time));\n}\nfunction findDate(date) {\n  const now = new Date();\n  const diff = now - date;\n  const seconds = Math.floor(diff / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n  const dayOfMonth = date.getDate();\n  const month = date.toLocaleString('en-us', {\n    month: 'short'\n  });\n  const year = date.getFullYear();\n  const hour = date.getHours();\n  const minute = date.getMinutes().toString().padStart(2, '0');\n  if (days < 1) {\n    if (hours < 1) {\n      if (minutes < 1) {\n        return seconds + \" seconds ago\";\n      } else {\n        return minutes + \" minutes ago\";\n      }\n    } else {\n      return hours + \" hours ago\";\n    }\n  } else if (days < 2) {\n    return `${month} ${dayOfMonth} at ${hour}:${minute}`;\n  } else {\n    return `${month} ${dayOfMonth}, ${year} at ${hour}:${minute}`;\n  }\n}\nfunction getTag(tid) {\n  return model.tags.find(tag => tag._id === tid);\n}\nfunction getUser(uid) {\n  return model.users.find(user => user._id === uid);\n}\nfunction getComment(cid) {\n  return model.comments.find(comment => comment._id === cid);\n}\nfunction getAnswer(aid) {\n  return model.answers.find(ans => aid === ans._id);\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DisplayQuestionDetails\");\n$RefreshReg$(_c2, \"DisplayAllAnswers\");\n$RefreshReg$(_c3, \"AnswersList\");","map":{"version":3,"names":["React","Header","Sidebar","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","model","DisplayQuestionDetails","props","_s","_currentQuestion$answ","JSON","parse","stringify","data","currentQuestion","localStorage","getItem","currentPage","setCurrentPage","commentPages","setCommentPages","showCommentForm","setShowCommentForm","showCommentFormA","setShowCommentFormA","currentCommentPage","setCurrentCommentPage","findAnsId","setAnsId","text","setText","textAc","setTextAc","pageSize","commentPageSize","tags","map","tagId","getTag","comments","commentId","getComment","commentsA","answers","reduce","acc","answer","_answer$comments","answerComments","answerId","getAnswer","sort","a","b","Date","ans_date_time","numOfPages","Math","ceil","length","numOfCommentPages","numOfCommentPagesA","displayedComments","slice","ask_date_time","handleNext","handlePrev","handleCommentNextQ","prev","handleCommentPrevQ","addComment","commentData","authorId","currentUser","_id","now","votes","console","log","response","post","newCommentId","put","setPage","setData","error","incVote","decVote","children","page","fileName","_jsxFileName","lineNumber","columnNumber","className","title","views","tag","name","getUser","askedBy","first_name","last_name","findDate","onClick","comment","index","disabled","maxLength","placeholder","value","onChange","e","target","DisplayAllAnswers","_c","_s2","textA","setTextA","showAnswerForm","setShowAnswerForm","displayedAnswers","answerQuestion","answerData","ans_by","newAnswerId","AnswersList","_c2","_s3","commentPagesA","setCommentPagesA","handleCommentNextA","handleCommentPrevA","max","addCommentA","reverse","_c3","sortByDate","list","date","diff","seconds","floor","minutes","hours","days","dayOfMonth","getDate","month","toLocaleString","year","getFullYear","hour","getHours","minute","getMinutes","toString","padStart","tid","find","uid","users","user","cid","aid","ans","$RefreshReg$"],"sources":["/Users/kailashanand/StackOverflowClone/client/src/components/answers.js"],"sourcesContent":["import React from \"react\";\nimport { Header,Sidebar } from \"./headerAndSidebar\";\nimport '../stylesheets/answers.css';\nimport {useState} from \"react\";\nimport axios from 'axios';\n\nlet model = null;\n\nexport const DisplayQuestionDetails = (props) => {\n    model = JSON.parse(JSON.stringify(props.data));\n\n    const currentQuestion = JSON.parse(localStorage.getItem(\"currentQuestion\"));\n    const [currentPage, setCurrentPage] = React.useState(0);\n    const [commentPages, setCommentPages] = React.useState({});\n    //const [commentPagesA, setCommentPagesA] = React.useState({});\n    const [showCommentForm, setShowCommentForm] = useState(false); // Correctly initialized here\n    const [showCommentFormA, setShowCommentFormA] = useState(false);\n    const [currentCommentPage, setCurrentCommentPage] = useState(0);\n    const [findAnsId, setAnsId] = useState(0);\n    // state to hold the new comment text\n    const [text, setText] = React.useState(\"\");\n  \n    const [textAc, setTextAc] = React.useState(\"\");\n\n    const pageSize = 5;\n    const commentPageSize = 3;\n    const tags = currentQuestion.tags.map(tagId => getTag(tagId));\n    const comments = currentQuestion.comments.map(commentId => getComment(commentId));\n    const commentsA = currentQuestion.answers?.reduce((acc, answer) => {\n      const answerComments = answer.comments?.map(commentId => getComment(commentId)) || [];\n      return [...acc, ...answerComments];\n  }, []);\n    const answers = currentQuestion.answers.map(answerId => getAnswer(answerId)).sort((a, b) => new Date(b.ans_date_time) - new Date(a.ans_date_time));\n    const numOfPages = Math.ceil(answers.length / pageSize);\n    \n    const numOfCommentPages = Math.ceil(comments.length / commentPageSize);\n    const numOfCommentPagesA = Math.ceil(commentsA.length / commentPageSize);\n    const displayedComments = comments\n  .slice(currentCommentPage * commentPageSize, (currentCommentPage + 1) * commentPageSize)\n  .sort((a, b) => new Date(a.ask_date_time) - new Date(b.ask_date_time));\n    // const displayedCommentsA = commentsA.slice(\n    //   commentPagesA * commentPageSize,\n    //   (commentPagesA + 1) * commentPageSize\n    // );\n\n    const handleNext = () => {\n      if (currentPage < numOfPages - 1) {\n          setCurrentPage(currentPage + 1);\n      }\n  };\n\n  const handlePrev = () => {\n      if (currentPage > 0) {\n          setCurrentPage(currentPage - 1);\n      }\n  };\n\n    const handleCommentNextQ = () => {\n      if (currentCommentPage < numOfCommentPages - 1) {\n        setCurrentCommentPage(prev => prev + 1);\n    }\n    };\n\n    const handleCommentPrevQ = () => {\n      if (currentCommentPage > 0) {\n        setCurrentCommentPage(prev => prev - 1);\n    }\n    };\n\n  //   const handleCommentNextA = (answerId) => {\n  //     setCommentPagesA(prev => ({\n  //       ...prev,\n  //       [answerId]: ((prev[answerId] || 0) + 1)\n  //   }));\n  // };\n\n  // const handleCommentPrevA = (answerId) => {\n  //   setCommentPagesA(prev => ({\n  //     ...prev,\n  //     [answerId]: Math.max(0, (prev[answerId] || 0) - 1)\n  // }));\n  // };\n\n\n\n     \n\n    const addComment = async () => {\n      const commentData = {\n        text: text,\n        authorId: model.currentUser._id,\n        ask_date_time: Date.now(),\n        votes: 0\n      };\n    \n      try {\n        console.log(\"This is author id: \", model.currentUser._id);\n        const response = await axios.post('http://localhost:8000/api/comments', commentData);\n        const newCommentId = response.data._id; // Assuming the server returns the ID of the newly created comment\n        await axios.put(`http://localhost:8000/api/questions/${currentQuestion._id}/comments`, {\n        commentId: newCommentId\n        });\n        setText(\"\");\n        //////////////\n        /////////////\n        /////////////\n        //CHANGE HERE PAGE\n        props.setPage(3);\n        /////////////\n        ////////////\n        //////////////\n        props.setData(null);\n      } catch (error) {\n        console.error(\"Error adding comment:\", error);\n      }\n    };\n\n    const incVote = () => {\n\n    };\n\n    const decVote = () => {\n\n    };\n    \n\n    return (\n        <>\n            <Header page={props.page} setPage={props.setPage} data={props.data} setData={props.setData}/>\n            <Sidebar page={props.page} setPage={props.setPage} data={props.data} setData={props.setData}/>\n            <div className=\"mainContent\">\n                <div className=\"questionDetails\">\n                    <h1 className=\"questionTitle\">{currentQuestion.title}</h1>\n                    <div className=\"stats\">\n                        <p className=\"answersCount\"><strong>Answers:</strong> {currentQuestion.answers.length}</p>\n                        <p className=\"viewsCount\"><strong>Views:</strong> {currentQuestion.views}</p>\n                        <p className=\"votesCount\"><strong>Votes:</strong> {currentQuestion.votes}</p>\n                    </div>\n                    <h3 className=\"subheading\">Text:</h3>\n                    <p className=\"questionText\">{currentQuestion.text}</p>\n                    <h3 className=\"subheading\">Tags:</h3>\n                    <div className=\"tagsContainer\">\n                        {tags.map(tag => <span key={tag._id} className=\"tag\">{tag.name}</span>)}\n                    </div>\n                    <h3 className=\"subheading\">Asked by:</h3>\n                    <div className=\"askedBy\">\n                        <p className=\"username\">{getUser(currentQuestion.askedBy).first_name + \" \" + getUser(currentQuestion.askedBy).last_name}</p>\n                        <p className=\"date\">{findDate(new Date(currentQuestion.ask_date_time))}</p>\n                    </div>\n                    <div className=\"VotesContainer\">\n                    {props.data.currentUser ? (\n  <>\n    <h1>Vote</h1>\n    <button key=\"upvote\" onClick={incVote()}>Upvote</button>\n    <button key=\"downvote\" onClick={decVote()}>Downvote</button>\n  </>\n) : (\n  <div></div>\n)}\n                      \n                    </div>\n                    <h3 className=\"subheading\">Comments:</h3>\n                    <div className=\"commentsContainer\">\n                        {displayedComments.map((comment, index) => (\n                            <div key={index} className=\"comment\">\n                                <span className=\"commentText\">{comment.text} - </span>\n                                <span className=\"commentAuthor\"><strong>by {getUser(comment.authorId).first_name}</strong></span>\n                                <span className=\"commentDate\"> on {findDate(new Date(comment.ask_date_time))}</span>\n                            </div>\n                        ))}\n                        <div className=\"pagination\">\n                          <button onClick={handleCommentPrevQ} disabled={currentCommentPage === 0 || comments.length<=3} >Prev</button>\n                          <button onClick={handleCommentNextQ} disabled={currentCommentPage === numOfCommentPages - 1 || comments.length <= 3}>Next</button>\n                        </div>\n                        <div>\n                            {props.data.currentUser ? (\n                                <button className=\"addCommentBtn\" onClick={() => setShowCommentForm(true)}>Add Comment</button>\n                            ) : (\n                                <div></div>\n                            )}\n                        </div>\n                        {showCommentForm && (\n                            <div className=\"commentForm\">\n                                <textarea maxLength=\"140\" placeholder=\"Write your comment here...\" value={text} onChange={(e) => setText(e.target.value)}></textarea>\n                                <button onClick={addComment}>Comment</button>\n                                <button onClick={() => setShowCommentForm(false)}>Cancel</button>\n                            </div>\n                        )}\n                    </div>\n                </div>\n                  <h2 className=\"answersSubtitle\">Answers</h2>\n                  {DisplayAllAnswers(props, model, currentQuestion, currentPage, setCurrentPage)}\n                \n                    \n            </div>\n        </>\n);\n}\n\nconst DisplayAllAnswers = (props, model, currentQuestion, currentPage, setCurrentPage) => {\n  const pageSize = 5;\n  const answers = currentQuestion.answers\n      .map(answerId => getAnswer(answerId))\n      .sort((a, b) => new Date(b.ans_date_time) - new Date(a.ans_date_time));\n  const [textA, setTextA] = React.useState(\"\");\n  const [showAnswerForm, setShowAnswerForm] = React.useState(false);\n  const numOfPages = Math.ceil(answers.length / pageSize);\n  const displayedAnswers = answers.slice(currentPage * pageSize, (currentPage + 1) * pageSize);\n  const handleNext = () => {\n    if (currentPage < numOfPages - 1) {\n        setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentPage > 0) {\n        setCurrentPage(currentPage - 1);\n    }\n  };\n  const answerQuestion = async () => {\n      try {\n        const answerData = {\n          \n            text: textA, // Replace with the actual answer text\n            ans_by: model.currentUser._id, // Assuming you have the current user ID\n            ans_date_time: Date.now(), // Assuming you want to use the current date/time\n            votes: 0 // You can set initial votes to 0 or any default value\n          \n        };\n    \n        // Make PUT request to add answer\n        const response = await axios.post(`http://localhost:8000/api/answers`, answerData);\n        const newAnswerId = response.data._id;\n        console.log(\"This is current question id: \\n\", currentQuestion._id);\n        console.log(\"This is answer id: \\n\", newAnswerId);\n        await axios.put(`http://localhost:8000/api/questions/${currentQuestion._id}/answers`, {\n        answerId: newAnswerId\n        });\n        console.log(\"Reached here!\");\n        // Handle response (optional)\n        setTextA(\"\");\n        props.setPage(3);\n        props.setData(null);\n        // Optionally, you can update the state or perform other actions after adding the answer\n      } catch (error) {\n        console.error(\"Error adding answer:\", error);\n      }\n    }\n  return (\n      <>\n          {displayedAnswers.map(answer => (\n              <AnswersList props={props} answer={answer} key={answer._id} />\n          ))}\n          <div className=\"pagination\">\n              <button onClick={handlePrev} disabled={currentPage === 0 || answers.length <= pageSize}>Prev</button>\n              <button onClick={handleNext} disabled={(currentPage === numOfPages - 1) || answers.length <= pageSize}>Next</button>\n          </div>\n          \n          {showAnswerForm && (\n            <div className=\"answerForm\">\n              <textarea maxLength=\"500\" placeholder=\"Write your answer here...\" value={textA} onChange={(e) => setTextA(e.target.value)}></textarea>\n              <button onClick={answerQuestion}>Post</button>\n              <button onClick={() => setShowAnswerForm(false)}>Cancel</button>\n            </div>\n          )}\n          {props.data.currentUser ? (<button className=\"answerQuestionBtn\" onClick={\n            () => setShowAnswerForm(true)}>Answer Question</button>) : (<div></div>)}\n      </>\n  );\n};\n\nconst AnswersList = ({ props, answer, setPage, setData }) => {\n\n  const [commentPagesA, setCommentPagesA] = React.useState({});\n  const [showCommentFormA, setShowCommentFormA] = React.useState(false);\n  const [textAc, setTextAc] = React.useState(\"\");\n  const commentPageSize = 3;\n\n  const handleCommentNextA = (answerId) => {\n    setCommentPagesA(prev => ({\n      ...prev,\n      [answerId]: ((prev[answerId] || 0) + 1)\n  }));\n};\n\nconst handleCommentPrevA = (answerId) => {\n  setCommentPagesA(prev => ({\n    ...prev,\n    [answerId]: Math.max(0, (prev[answerId] || 0) - 1)\n}));\n};\nconst addCommentA = async (answerId) => {\n  const commentData = {\n    text: textAc,\n    authorId: model.currentUser._id,\n    ask_date_time: Date.now(),\n    votes: 0\n  };\n  console.log(\"This is answer ID: \", answerId);\n  try {\n    const response = await axios.post('http://localhost:8000/api/comments', commentData);\n    const newCommentId = response.data._id; // Assuming the server returns the ID of the newly created comment\n    await axios.put(`http://localhost:8000/api/answers/${answerId}/comments`, {\n    commentId: newCommentId\n    });\n    setTextAc(\"\");\n    props.setPage(3);\n    props.setData(null);\n  } catch (error) {\n    console.error(\"Error adding comment:\", error);\n  }\n };\n\n\n  return (\n    <div key={answer._id} className=\"answer\">\n        <p className=\"answerText\">{answer.text}</p>\n        <div className=\"answerFooter\">\n          <span className=\"answerVotes\">{answer.votes} Votes</span>\n            <span className=\"answerDetails\">\n            <span className=\"answerAuthor\">{getUser(answer.ans_by).first_name} {getUser(answer.ans_by).last_name}</span>\n            <span className=\"answerDate\">{findDate(new Date(answer.ans_date_time))}</span>\n          </span>\n        </div>\n        <h3 className=\"subheadingA\">Comments:</h3>\n        <div className=\"commentsContainerA\">\n        {answer.comments\n  .map(commentId => getComment(commentId)) // Convert IDs to comment objects\n  .reverse() // Reverse the array to start from the last element\n  .slice((commentPagesA[answer._id] || 0) * commentPageSize, ((commentPagesA[answer._id] || 0) + 1) * commentPageSize) // Paginate the comments\n  .map(comment => {\n    return (\n      <div key={comment._id} className=\"commentA\">\n        <p className=\"commentText\">{comment.text} - <strong>by {getUser(comment.authorId).first_name}</strong> on {findDate(new Date(comment.ask_date_time))}</p>\n      </div>\n    );\n  })}\n\n\n\n\n          <div className=\"paginationAc\">\n            {props.data.currentUser ? (<button className=\"addCommentBtn\" onClick={() => setShowCommentFormA(true)}>Add Comment</button>) : (<div></div>)}\n            <div>\n            <button onClick={() => handleCommentPrevA(answer._id)} disabled={(commentPagesA[answer._id] < 1) || (answer.comments.length <= 3)}>Prev</button>\n            <button onClick={() => handleCommentNextA(answer._id)} disabled={commentPagesA[answer._id] >= Math.ceil(answer.comments.length / commentPageSize) - 1 || answer.comments.length <= commentPageSize}>Next</button>\n            </div>\n          </div>\n          {showCommentFormA && (\n          <div className=\"commentForm\">\n            <textarea maxLength=\"140\" placeholder=\"Write your comment here...\" value={textAc} onChange={(e) => setTextAc(e.target.value)}></textarea>\n            <button onClick={() => addCommentA(answer._id)}>Comment</button>\n            <button onClick={() => setShowCommentFormA(false)}>Cancel</button>\n          </div>\n        )}\n        </div>\n    </div>\n  );\n};\n\nfunction sortByDate(list) {\n  list.sort((a, b) => new Date(getAnswer(b._id).ans_date_time) - new Date(getAnswer(a._id).ans_date_time));\n}\n\nfunction findDate(date) {\n    const now = new Date();\n    const diff = now - date;\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n  \n    const dayOfMonth = date.getDate();\n    const month = date.toLocaleString('en-us', { month: 'short' });\n    const year = date.getFullYear();\n    const hour = date.getHours();\n    const minute = date.getMinutes().toString().padStart(2, '0');\n  \n    if (days < 1) {\n      if (hours < 1) {\n        if (minutes < 1) {\n          return seconds + \" seconds ago\";\n        } else {\n          return minutes + \" minutes ago\";\n        }\n      } else {\n        return hours + \" hours ago\";\n      }\n    } else if (days < 2) {\n      return `${month} ${dayOfMonth} at ${hour}:${minute}`;\n    } else {\n      return `${month} ${dayOfMonth}, ${year} at ${hour}:${minute}`;\n    }\n}\n\nfunction getTag(tid) {\n    return model.tags.find(tag => tag._id === tid); \n}\n\nfunction getUser(uid) {\n    return model.users.find(user => user._id === uid);\n}\n\nfunction getComment(cid) {\n    return model.comments.find(comment => comment._id === cid);\n}\n\nfunction getAnswer(aid) {\n  return model.answers.find(ans => aid === ans._id);\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}